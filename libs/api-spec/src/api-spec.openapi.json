{
  "x-generator": "NSwag v13.11.3.0 (NJsonSchema v10.4.4.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "FlowAccount Business API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://openapi.flowaccount.com/test"
    },
    {
      "url": "https://openapi.flowaccount.com/sandbox"
    }
    ,
    {
      "url": "https://openapi.flowaccount.com/v3"
    }
  ],
  "paths": {
    "/openapi/{culture}/cash-invoices": {
      "get": {
        "tags": [
          "CashInvoice"
        ],
        "operationId": "CashInvoice_Index",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "SearchString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "CustomDocumentModels",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Range",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 12
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [

            ]
          }
        ]
      }
    },
    "/openapi/{culture}/cash-invoices/{id}": {
      "get": {
        "tags": [
          "CashInvoice"
        ],
        "operationId": "CashInvoice_Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [

            ]
          }
        ]
      }
    },
    "/openapi/{culture}/cash-invoices/get-batch-import-org-file/{batchId}": {
      "get": {
        "tags": [
          "CashInvoice"
        ],
        "operationId": "CashInvoice_GetOriginalFile",
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [

            ]
          }
        ]
      }
    },
    "/openapi/{culture}/cash-invoices/batch-metadata": {
      "get": {
        "tags": [
          "CashInvoice"
        ],
        "operationId": "CashInvoice_GenerateBacthIdMetadata",
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchImportMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [

            ]
          }
        ]
      }
    },
    "/openapi/{culture}/cash-invoices/custom-template": {
      "get": {
        "tags": [
          "CashInvoice"
        ],
        "operationId": "CashInvoice_GetCustomTemplates",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [

            ]
          }
        ]
      }
    },
    
    
    "/openapi/{culture}/cash-invoices/batch-import-history": {
      "post": {
        "tags": [
          "CashInvoice"
        ],
        "operationId": "CashInvoice_QueryBatchHistory",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchHistory"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [

            ]
          }
        ]
      }
    },
    "/openapi/{culture}/cash-invoices/query-batch": {
      "post": {
        "tags": [
          "CashInvoice"
        ],
        "operationId": "CashInvoice_QueryBatch",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BatchImportStatus"
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "batchId",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchStatus"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [

            ]
          }
        ]
      }
    },
    "/openapi/{culture}/cash-invoices/trigger-batch-from-s3": {
      "post": {
        "tags": [
          "CashInvoice"
        ],
        "operationId": "CashInvoice_TriggerBatchFromS3",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 2
          },
          {
            "name": "s3Key",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 4
          }
        ],
        "requestBody": {
          "x-name": "companyId",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/openapi/{culture}/cash-invoices/mark-viewed": {
      "post": {
        "tags": [
          "CashInvoice"
        ],
        "operationId": "CashInvoice_MarkViewed",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 2
          },
          {
            "name": "batchId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 4
          }
        ],
        "requestBody": {
          "x-name": "companyId",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/openapi/{culture}/cash-invoices/simple-document": {
      "post": {
        "tags": [
          "CashInvoice"
        ],
        "operationId": "CashInvoice_ActorCreateCashInvoice",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchImportPayload"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchMessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [

            ]
          }
        ]
      }
    },
    "/openapi/{culture}/cash-invoices/inline-document": {
      "post": {
        "tags": [
          "CashInvoice"
        ],
        "operationId": "CashInvoice_ActorCreateCashInvoiceInline",
        "parameters": [
          {
            "name": "batchId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "inlineDocuments",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InlineDocument"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchMessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [

            ]
          }
        ]
      }
    },
    "/openapi/{culture}/cash-invoices/get-presign-for-upload-simpledoc": {
      "post": {
        "tags": [
          "CashInvoice"
        ],
        "operationId": "CashInvoice_PreSignUploadSimpleDocument",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreSignUploadSimpleDocumentPayload"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreSignUploadSimpleDocumentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [

            ]
          }
        ]
      }
    },
    "/openapi/{culture}/cash-invoices/{documentId}/status-key/{statusKey}": {
      "post": {
        "tags": [
          "CashInvoice"
        ],
        "operationId": "CashInvoice_ChangeStatusByKey",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "statusKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [

            ]
          }
        ]
      }
    },
    "/openapi/{culture}/cash-invoices/{id}/payments": {
      "post": {
        "tags": [
          "CashInvoice"
        ],
        "operationId": "CashInvoice_ReceivePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "sourcePayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [

            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "SpreadsheetTemplateMetadata": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "sheetIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columns": {
            "type": "string",
            "nullable": true
          },
          "dateFormat": {
            "$ref": "#/components/schemas/DateFormatType"
          },
          "ignoreLastRow": {
            "type": "boolean",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "formulas": {
            "type": "string",
            "nullable": true
          }
        }
      },
      
      "DateFormatType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "format": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BatchImportMetadata": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "companyUserGuid": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "templateId": {
            "type": "string",
            "nullable": true
          },
          "batchId": {
            "type": "string",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "nullable": true
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentTypes"
          },
          "status": {
            "$ref": "#/components/schemas/BatchImportStatus"
          },
          "documentCount": {
            "type": "integer",
            "format": "int32"
          },
          "successCount": {
            "type": "integer",
            "format": "int32"
          },
          "failedCount": {
            "type": "integer",
            "format": "int32"
          },
          "s3Key": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "isViewed": {
            "type": "boolean"
          }
        }
      },
      "DocumentTypes": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "PurchaseOrder",
          "Quotation",
          "BillingNote",
          "TaxInvoice",
          "Receipt",
          "Expense",
          "Vendor",
          "WithHoldingTax",
          "BillingNotePartials",
          "TaxInvoicePartails",
          "Purchase",
          "PurchaseTax",
          "ReceivableInvoice",
          "AdjustInventory",
          "CreditNote",
          "DebitNote",
          "CashInvoice",
          "JournalEntry",
          "PurchaseVoucher",
          "SalesVoucher",
          "PaymentVoucher",
          "ReceivedVoucher",
          "ConversionBalance",
          "Transaction",
          "SupplierInvoice",
          "BatchTaxFiling",
          "FixedAsset",
          "Depreciation",
          "BankTransfer",
          "DraftJournalEntry",
          "DraftPurchaseVoucher",
          "DraftSalesVoucher",
          "DraftPaymentVoucher",
          "DraftReceivedVoucher",
          "Payroll",
          "PayrollDetail",
          "Employee",
          "PayrollPayment"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9,
          13,
          15,
          17,
          19,
          21,
          23,
          24,
          25,
          29,
          31,
          33,
          35,
          51,
          53,
          55,
          57,
          59,
          61,
          63,
          65,
          67,
          69,
          71,
          73,
          151,
          153,
          155,
          157,
          159,
          201,
          202,
          203,
          204
        ]
      },
      "BatchImportStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "None",
          "Awaiting",
          "Pending",
          "Failed",
          "HandledDuplicated",
          "Succeed"
        ],
        "enum": [
          0,
          1,
          3,
          5,
          6,
          7
        ]
      },
      "BatchHistory": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "metadataList": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BatchImportMetadata"
            }
          }
        }
      },
      "SpreadsheetTemplate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "metadataList": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SpreadsheetTemplateMetadata"
            }
          }
        }
      },
      "BatchStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "messages": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BatchMessageStatus"
            }
          },
          "metadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BatchImportMetadata"
              }
            ]
          }
        }
      },
      "BatchMessageStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "companyUserGuid": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "batchId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/BatchImportStatus"
          },
          "messageId": {
            "type": "string",
            "nullable": true
          },
          "failedReason": {
            "type": "string",
            "nullable": true
          },
          "payload": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BatchMessageSent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "batchId": {
            "type": "string",
            "nullable": true
          },
          "documentCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PreSignUploadSimpleDocumentPayload": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fileName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PreSignUploadSimpleDocumentResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string"
          },
          "batchId": {
            "type": "string"
          }
        }
      },
      "BatchImportPayload": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "simpleDocuments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SimpleDocument"
            }
          },
          "batchId": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "batchCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SimpleDocument": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Document"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/SimpleProductItem"
                }
              },
              "documentReference": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/UpgradeDocument"
                }
              },
              "exemptAmount": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              }
            }
          }
        ]
      },
      "SimpleProductItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductItem"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ProductItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "decimal"
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "pricePerUnit": {
            "type": "number",
            "format": "decimal"
          },
          "total": {
            "type": "number",
            "format": "decimal"
          },
          "sellChartOfAccountCode": {
            "type": "string",
            "nullable": true
          },
          "buyChartOfAccountCode": {
            "type": "string",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpgradeDocument": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "recordId": {
            "type": "integer",
            "format": "int64"
          },
          "referenceDocumentSerial": {
            "type": "string",
            "nullable": true
          },
          "referenceDocumentType": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Document": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "recordId": {
            "type": "integer",
            "format": "int64"
          },
          "contactCode": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "contactAddress": {
            "type": "string",
            "nullable": true
          },
          "contactTaxId": {
            "type": "string",
            "nullable": true
          },
          "contactBranch": {
            "type": "string",
            "nullable": true
          },
          "contactPerson": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "type": "string",
            "nullable": true
          },
          "contactZipCode": {
            "type": "string",
            "nullable": true
          },
          "contactGroup": {
            "type": "integer",
            "format": "int32"
          },
          "publishedOn": {
            "type": "string",
            "format": "date-time"
          },
          "creditType": {
            "type": "integer",
            "format": "int32"
          },
          "creditDays": {
            "type": "integer",
            "format": "int32"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "salesName": {
            "type": "string",
            "nullable": true
          },
          "projectName": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "isVatInclusive": {
            "type": "boolean"
          },
          "useReceiptDeduction": {
            "type": "boolean"
          },
          "subTotal": {
            "type": "number",
            "format": "decimal"
          },
          "discountPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "discountAmount": {
            "type": "number",
            "format": "decimal"
          },
          "totalAfterDiscount": {
            "type": "number",
            "format": "decimal"
          },
          "isVat": {
            "type": "boolean"
          },
          "vatAmount": {
            "type": "number",
            "format": "decimal"
          },
          "grandTotal": {
            "type": "number",
            "format": "decimal"
          },
          "documentShowWithholdingTax": {
            "type": "boolean"
          },
          "documentWithholdingTaxPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "documentWithholdingTaxAmount": {
            "type": "number",
            "format": "decimal"
          },
          "documentDeductionType": {
            "type": "integer",
            "format": "int32"
          },
          "documentDeductionAmount": {
            "type": "number",
            "format": "decimal"
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "internalNotes": {
            "type": "string",
            "nullable": true
          },
          "showSignatureOrStamp": {
            "type": "boolean"
          },
          "documentStructureType": {
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "saleAndPurchaseChannel": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InlineDocument": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Document"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "discountType": {
                "type": "integer",
                "format": "int32"
              },
              "useInlineDiscount": {
                "type": "boolean"
              },
              "useInlineVat": {
                "type": "boolean"
              },
              "exemptAmount": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "vatableAmount": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/InlineProductItem"
                }
              },
              "documentReference": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/UpgradeDocument"
                }
              }
            }
          }
        ]
      },
      "InlineProductItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "decimal"
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "pricePerUnit": {
            "type": "number",
            "format": "decimal"
          },
          "total": {
            "type": "number",
            "format": "decimal"
          },
          "sellChartOfAccountCode": {
            "type": "string",
            "nullable": true
          },
          "buyChartOfAccountCode": {
            "type": "string",
            "nullable": true
          },
          "discountAmount": {
            "type": "number",
            "format": "decimal"
          },
          "vatRate": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PaymentModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "cashRemarks": {
            "type": "string",
            "nullable": true
          },
          "excludeVat": {
            "type": "number",
            "format": "double"
          },
          "cashTax": {
            "type": "integer",
            "format": "int32"
          },
          "creditCardNumber": {
            "type": "string",
            "nullable": true
          },
          "companyVatRate": {
            "type": "integer",
            "format": "int32"
          },
          "net": {
            "type": "number",
            "format": "decimal"
          },
          "bankAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "bankAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "dateNow": {
            "type": "string",
            "format": "date-time"
          },
          "amountCollected": {
            "type": "number",
            "format": "decimal"
          },
          "amountWithheld": {
            "type": "number",
            "format": "decimal"
          },
          "withholdingTax": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "transferBankAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bankAccountCreditCardId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "charge": {
            "type": "number",
            "format": "decimal"
          },
          "chequeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "chequeNumber": {
            "type": "string",
            "nullable": true
          },
          "chequeBankAccountId": {
            "type": "string",
            "nullable": true
          },
          "creditCardBankAccountId": {
            "type": "string",
            "nullable": true
          },
          "remainingCollected": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "remainingCollectedType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RemainingCollectedType"
              }
            ]
          },
          "deductionAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "paymentDeductionType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeductionType"
              }
            ]
          },
          "pettyCashName": {
            "type": "string",
            "nullable": true
          },
          "pettyCashId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "chequeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creditCardId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "otherChannelId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "chequeDepositDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "chequeDepositBankId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "chequeCashingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "autoCreateWithholdingTax": {
            "type": "boolean"
          },
          "withholdingTaxIncomeType": {
            "$ref": "#/components/schemas/IncomeType"
          },
          "withholdingTaxIncomeDescription": {
            "type": "string",
            "nullable": true
          },
          "withholdingTaxEntity": {
            "$ref": "#/components/schemas/Entity"
          },
          "exchangeRateFee": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "PaymentMethod": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "None",
          "Cash",
          "Cheque",
          "Transfer",
          "CreditCard",
          "PushPay",
          "PettyCash",
          "Other",
          "TransferByKConnect"
        ],
        "enum": [
          0,
          1,
          3,
          5,
          7,
          9,
          11,
          13,
          51
        ]
      },
      "RemainingCollectedType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "CashShortOrOver",
          "CashDiscount",
          "SalesCashShortOrOver",
          "SalesDiscount",
          "SalesBankFee",
          "ExchangeRateDiff"
        ],
        "enum": [
          1,
          3,
          51,
          53,
          55,
          57
        ]
      },
      "DeductionType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "None",
          "CashDiscount",
          "Commission",
          "ManagementFee",
          "Roundings"
        ],
        "enum": [
          0,
          1,
          3,
          5,
          7
        ]
      },
      "IncomeType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Salary",
          "Commission",
          "Licensing",
          "Interest",
          "NetProfit30",
          "NetProfit25",
          "NetProfit20",
          "NetProfitOther",
          "TaxExemption",
          "DividenFromShareOfProfit",
          "PortionOfNetProfit",
          "RecognitionOfProfit",
          "TaxOther",
          "RevenueDepartmentTax",
          "Others"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9,
          11,
          13,
          15,
          17,
          19,
          21,
          23,
          25,
          27,
          29
        ]
      },
      "Entity": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "PND3",
          "PND53",
          "PND1K",
          "PND1KSpecial",
          "PND2",
          "PND2K",
          "PND3K",
          "PND1"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9,
          11,
          13,
          15
        ]
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "description": "Specify the authorization token.",
        "scheme": "bearer",
        "bearerFormat": "Reference"
      }
    }
  },
  "security": [
    {
      "bearer": [

      ]
    }
  ]
}
