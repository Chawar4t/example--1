/*
 * FlowAccount Open API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Employee
    /// </summary>
    [DataContract(Name = "Employee")]
    public partial class Employee : IEquatable<Employee>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Prefix
        /// </summary>
        [DataMember(Name = "prefix", EmitDefaultValue = false)]
        public GenderPrefix? Prefix { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Employee" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="companyId">companyId.</param>
        /// <param name="prefix">prefix.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="salary">salary.</param>
        /// <param name="identitficationNumber">identitficationNumber.</param>
        /// <param name="passportNumber">passportNumber.</param>
        /// <param name="profileImage">profileImage.</param>
        /// <param name="mobile">mobile.</param>
        /// <param name="commission">commission.</param>
        /// <param name="remarks">remarks.</param>
        /// <param name="title">title.</param>
        /// <param name="galleryId">galleryId.</param>
        /// <param name="bankId">bankId.</param>
        /// <param name="branch">branch.</param>
        /// <param name="accountNumber">accountNumber.</param>
        /// <param name="accountType">accountType.</param>
        /// <param name="startDate">startDate.</param>
        /// <param name="endDate">endDate.</param>
        /// <param name="internalNote">internalNote.</param>
        /// <param name="isActive">isActive.</param>
        /// <param name="createdOn">createdOn.</param>
        /// <param name="modifiedOn">modifiedOn.</param>
        /// <param name="createdBy">createdBy.</param>
        /// <param name="modifiedBy">modifiedBy.</param>
        /// <param name="type">type.</param>
        /// <param name="code">code.</param>
        /// <param name="salaryType">salaryType.</param>
        /// <param name="socialSecurityNumber">socialSecurityNumber.</param>
        /// <param name="employerSocialSecurityRate">employerSocialSecurityRate.</param>
        /// <param name="employeeSocialSecurityRate">employeeSocialSecurityRate.</param>
        /// <param name="email">email.</param>
        /// <param name="dob">dob.</param>
        /// <param name="address">address.</param>
        /// <param name="contactName">contactName.</param>
        /// <param name="contactNumber">contactNumber.</param>
        /// <param name="contactRelationship">contactRelationship.</param>
        /// <param name="office">office.</param>
        /// <param name="socialSecurityStatus">socialSecurityStatus.</param>
        /// <param name="methodPayment">methodPayment.</param>
        /// <param name="secondaryEmail">secondaryEmail.</param>
        /// <param name="isDelete">isDelete.</param>
        /// <param name="socialSecurityValue">socialSecurityValue.</param>
        /// <param name="withholdingTax">withholdingTax.</param>
        /// <param name="isHeadOffice">isHeadOffice.</param>
        /// <param name="companyBranch">companyBranch.</param>
        /// <param name="maritalStatus">maritalStatus.</param>
        /// <param name="currentAddress">currentAddress.</param>
        /// <param name="departmentId">departmentId.</param>
        /// <param name="firstNameForeign">firstNameForeign.</param>
        /// <param name="lastNameForeign">lastNameForeign.</param>
        /// <param name="isSocialSecurityRegistered">isSocialSecurityRegistered.</param>
        /// <param name="bankBranchCode">bankBranchCode.</param>
        /// <param name="idCard">idCard.</param>
        /// <param name="householdRegistration">householdRegistration.</param>
        /// <param name="nickname">nickname.</param>
        /// <param name="nicknameForeign">nicknameForeign.</param>
        /// <param name="lineId">lineId.</param>
        /// <param name="conditionsWithholdingTax">conditionsWithholdingTax.</param>
        /// <param name="paidPeriod">paidPeriod.</param>
        /// <param name="bank">bank.</param>
        /// <param name="company">company.</param>
        /// <param name="gallery">gallery.</param>
        /// <param name="galleryIdCard">galleryIdCard.</param>
        /// <param name="galleryHouseholdRegistration">galleryHouseholdRegistration.</param>
        /// <param name="payrollDetail">payrollDetail.</param>
        /// <param name="department">department.</param>
        public Employee(long id = default(long), long? companyId = default(long?), GenderPrefix? prefix = default(GenderPrefix?), string firstName = default(string), string lastName = default(string), decimal salary = default(decimal), string identitficationNumber = default(string), string passportNumber = default(string), string profileImage = default(string), string mobile = default(string), decimal? commission = default(decimal?), string remarks = default(string), string title = default(string), long? galleryId = default(long?), int? bankId = default(int?), string branch = default(string), string accountNumber = default(string), int? accountType = default(int?), DateTime? startDate = default(DateTime?), DateTime? endDate = default(DateTime?), string internalNote = default(string), bool? isActive = default(bool?), DateTime? createdOn = default(DateTime?), DateTime? modifiedOn = default(DateTime?), long? createdBy = default(long?), long? modifiedBy = default(long?), OneOfEmployeeTypes type = default(OneOfEmployeeTypes), string code = default(string), int salaryType = default(int), string socialSecurityNumber = default(string), int employerSocialSecurityRate = default(int), int employeeSocialSecurityRate = default(int), string email = default(string), DateTime? dob = default(DateTime?), string address = default(string), string contactName = default(string), string contactNumber = default(string), string contactRelationship = default(string), string office = default(string), int? socialSecurityStatus = default(int?), int? methodPayment = default(int?), string secondaryEmail = default(string), bool isDelete = default(bool), decimal socialSecurityValue = default(decimal), decimal withholdingTax = default(decimal), bool isHeadOffice = default(bool), string companyBranch = default(string), int maritalStatus = default(int), string currentAddress = default(string), long? departmentId = default(long?), string firstNameForeign = default(string), string lastNameForeign = default(string), bool isSocialSecurityRegistered = default(bool), string bankBranchCode = default(string), long? idCard = default(long?), long? householdRegistration = default(long?), string nickname = default(string), string nicknameForeign = default(string), string lineId = default(string), OneOfConditionsOfWithholdingTax conditionsWithholdingTax = default(OneOfConditionsOfWithholdingTax), OneOfPaidPeriod paidPeriod = default(OneOfPaidPeriod), OneOfBank bank = default(OneOfBank), OneOfCompany company = default(OneOfCompany), OneOfGallery gallery = default(OneOfGallery), OneOfGallery galleryIdCard = default(OneOfGallery), OneOfGallery galleryHouseholdRegistration = default(OneOfGallery), List<PayrollDetail> payrollDetail = default(List<PayrollDetail>), OneOfDepartment department = default(OneOfDepartment))
        {
            this.Id = id;
            this.CompanyId = companyId;
            this.Prefix = prefix;
            this.FirstName = firstName;
            this.LastName = lastName;
            this.Salary = salary;
            this.IdentitficationNumber = identitficationNumber;
            this.PassportNumber = passportNumber;
            this.ProfileImage = profileImage;
            this.Mobile = mobile;
            this.Commission = commission;
            this.Remarks = remarks;
            this.Title = title;
            this.GalleryId = galleryId;
            this.BankId = bankId;
            this.Branch = branch;
            this.AccountNumber = accountNumber;
            this.AccountType = accountType;
            this.StartDate = startDate;
            this.EndDate = endDate;
            this.InternalNote = internalNote;
            this.IsActive = isActive;
            this.CreatedOn = createdOn;
            this.ModifiedOn = modifiedOn;
            this.CreatedBy = createdBy;
            this.ModifiedBy = modifiedBy;
            this.Type = type;
            this.Code = code;
            this.SalaryType = salaryType;
            this.SocialSecurityNumber = socialSecurityNumber;
            this.EmployerSocialSecurityRate = employerSocialSecurityRate;
            this.EmployeeSocialSecurityRate = employeeSocialSecurityRate;
            this.Email = email;
            this.Dob = dob;
            this.Address = address;
            this.ContactName = contactName;
            this.ContactNumber = contactNumber;
            this.ContactRelationship = contactRelationship;
            this.Office = office;
            this.SocialSecurityStatus = socialSecurityStatus;
            this.MethodPayment = methodPayment;
            this.SecondaryEmail = secondaryEmail;
            this.IsDelete = isDelete;
            this.SocialSecurityValue = socialSecurityValue;
            this.WithholdingTax = withholdingTax;
            this.IsHeadOffice = isHeadOffice;
            this.CompanyBranch = companyBranch;
            this.MaritalStatus = maritalStatus;
            this.CurrentAddress = currentAddress;
            this.DepartmentId = departmentId;
            this.FirstNameForeign = firstNameForeign;
            this.LastNameForeign = lastNameForeign;
            this.IsSocialSecurityRegistered = isSocialSecurityRegistered;
            this.BankBranchCode = bankBranchCode;
            this.IdCard = idCard;
            this.HouseholdRegistration = householdRegistration;
            this.Nickname = nickname;
            this.NicknameForeign = nicknameForeign;
            this.LineId = lineId;
            this.ConditionsWithholdingTax = conditionsWithholdingTax;
            this.PaidPeriod = paidPeriod;
            this.Bank = bank;
            this.Company = company;
            this.Gallery = gallery;
            this.GalleryIdCard = galleryIdCard;
            this.GalleryHouseholdRegistration = galleryHouseholdRegistration;
            this.PayrollDetail = payrollDetail;
            this.Department = department;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public long Id { get; set; }

        /// <summary>
        /// Gets or Sets CompanyId
        /// </summary>
        [DataMember(Name = "companyId", EmitDefaultValue = true)]
        public long? CompanyId { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name = "firstName", EmitDefaultValue = true)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name = "lastName", EmitDefaultValue = true)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets Salary
        /// </summary>
        [DataMember(Name = "salary", EmitDefaultValue = false)]
        public decimal Salary { get; set; }

        /// <summary>
        /// Gets or Sets IdentitficationNumber
        /// </summary>
        [DataMember(Name = "identitficationNumber", EmitDefaultValue = true)]
        public string IdentitficationNumber { get; set; }

        /// <summary>
        /// Gets or Sets PassportNumber
        /// </summary>
        [DataMember(Name = "passportNumber", EmitDefaultValue = true)]
        public string PassportNumber { get; set; }

        /// <summary>
        /// Gets or Sets ProfileImage
        /// </summary>
        [DataMember(Name = "profileImage", EmitDefaultValue = true)]
        public string ProfileImage { get; set; }

        /// <summary>
        /// Gets or Sets Mobile
        /// </summary>
        [DataMember(Name = "mobile", EmitDefaultValue = true)]
        public string Mobile { get; set; }

        /// <summary>
        /// Gets or Sets Commission
        /// </summary>
        [DataMember(Name = "commission", EmitDefaultValue = true)]
        public decimal? Commission { get; set; }

        /// <summary>
        /// Gets or Sets Remarks
        /// </summary>
        [DataMember(Name = "remarks", EmitDefaultValue = true)]
        public string Remarks { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name = "title", EmitDefaultValue = true)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets GalleryId
        /// </summary>
        [DataMember(Name = "galleryId", EmitDefaultValue = true)]
        public long? GalleryId { get; set; }

        /// <summary>
        /// Gets or Sets BankId
        /// </summary>
        [DataMember(Name = "bankId", EmitDefaultValue = true)]
        public int? BankId { get; set; }

        /// <summary>
        /// Gets or Sets Branch
        /// </summary>
        [DataMember(Name = "branch", EmitDefaultValue = true)]
        public string Branch { get; set; }

        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name = "accountNumber", EmitDefaultValue = true)]
        public string AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets AccountType
        /// </summary>
        [DataMember(Name = "accountType", EmitDefaultValue = true)]
        public int? AccountType { get; set; }

        /// <summary>
        /// Gets or Sets StartDate
        /// </summary>
        [DataMember(Name = "startDate", EmitDefaultValue = true)]
        public DateTime? StartDate { get; set; }

        /// <summary>
        /// Gets or Sets EndDate
        /// </summary>
        [DataMember(Name = "endDate", EmitDefaultValue = true)]
        public DateTime? EndDate { get; set; }

        /// <summary>
        /// Gets or Sets InternalNote
        /// </summary>
        [DataMember(Name = "internalNote", EmitDefaultValue = true)]
        public string InternalNote { get; set; }

        /// <summary>
        /// Gets or Sets IsActive
        /// </summary>
        [DataMember(Name = "isActive", EmitDefaultValue = true)]
        public bool? IsActive { get; set; }

        /// <summary>
        /// Gets or Sets CreatedOn
        /// </summary>
        [DataMember(Name = "createdOn", EmitDefaultValue = true)]
        public DateTime? CreatedOn { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedOn
        /// </summary>
        [DataMember(Name = "modifiedOn", EmitDefaultValue = true)]
        public DateTime? ModifiedOn { get; set; }

        /// <summary>
        /// Gets or Sets CreatedBy
        /// </summary>
        [DataMember(Name = "createdBy", EmitDefaultValue = true)]
        public long? CreatedBy { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedBy
        /// </summary>
        [DataMember(Name = "modifiedBy", EmitDefaultValue = true)]
        public long? ModifiedBy { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = true)]
        public OneOfEmployeeTypes Type { get; set; }

        /// <summary>
        /// Gets or Sets Code
        /// </summary>
        [DataMember(Name = "code", EmitDefaultValue = true)]
        public string Code { get; set; }

        /// <summary>
        /// Gets or Sets SalaryType
        /// </summary>
        [DataMember(Name = "salaryType", EmitDefaultValue = false)]
        public int SalaryType { get; set; }

        /// <summary>
        /// Gets or Sets SocialSecurityNumber
        /// </summary>
        [DataMember(Name = "socialSecurityNumber", EmitDefaultValue = true)]
        public string SocialSecurityNumber { get; set; }

        /// <summary>
        /// Gets or Sets EmployerSocialSecurityRate
        /// </summary>
        [DataMember(Name = "employerSocialSecurityRate", EmitDefaultValue = false)]
        public int EmployerSocialSecurityRate { get; set; }

        /// <summary>
        /// Gets or Sets EmployeeSocialSecurityRate
        /// </summary>
        [DataMember(Name = "employeeSocialSecurityRate", EmitDefaultValue = false)]
        public int EmployeeSocialSecurityRate { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name = "email", EmitDefaultValue = true)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Dob
        /// </summary>
        [DataMember(Name = "dob", EmitDefaultValue = true)]
        public DateTime? Dob { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name = "address", EmitDefaultValue = true)]
        public string Address { get; set; }

        /// <summary>
        /// Gets or Sets ContactName
        /// </summary>
        [DataMember(Name = "contactName", EmitDefaultValue = true)]
        public string ContactName { get; set; }

        /// <summary>
        /// Gets or Sets ContactNumber
        /// </summary>
        [DataMember(Name = "contactNumber", EmitDefaultValue = true)]
        public string ContactNumber { get; set; }

        /// <summary>
        /// Gets or Sets ContactRelationship
        /// </summary>
        [DataMember(Name = "contactRelationship", EmitDefaultValue = true)]
        public string ContactRelationship { get; set; }

        /// <summary>
        /// Gets or Sets Office
        /// </summary>
        [DataMember(Name = "office", EmitDefaultValue = true)]
        public string Office { get; set; }

        /// <summary>
        /// Gets or Sets SocialSecurityStatus
        /// </summary>
        [DataMember(Name = "socialSecurityStatus", EmitDefaultValue = true)]
        public int? SocialSecurityStatus { get; set; }

        /// <summary>
        /// Gets or Sets MethodPayment
        /// </summary>
        [DataMember(Name = "methodPayment", EmitDefaultValue = true)]
        public int? MethodPayment { get; set; }

        /// <summary>
        /// Gets or Sets SecondaryEmail
        /// </summary>
        [DataMember(Name = "secondaryEmail", EmitDefaultValue = true)]
        public string SecondaryEmail { get; set; }

        /// <summary>
        /// Gets or Sets IsDelete
        /// </summary>
        [DataMember(Name = "isDelete", EmitDefaultValue = true)]
        public bool IsDelete { get; set; }

        /// <summary>
        /// Gets or Sets SocialSecurityValue
        /// </summary>
        [DataMember(Name = "socialSecurityValue", EmitDefaultValue = false)]
        public decimal SocialSecurityValue { get; set; }

        /// <summary>
        /// Gets or Sets WithholdingTax
        /// </summary>
        [DataMember(Name = "withholdingTax", EmitDefaultValue = false)]
        public decimal WithholdingTax { get; set; }

        /// <summary>
        /// Gets or Sets IsHeadOffice
        /// </summary>
        [DataMember(Name = "isHeadOffice", EmitDefaultValue = true)]
        public bool IsHeadOffice { get; set; }

        /// <summary>
        /// Gets or Sets CompanyBranch
        /// </summary>
        [DataMember(Name = "companyBranch", EmitDefaultValue = true)]
        public string CompanyBranch { get; set; }

        /// <summary>
        /// Gets or Sets MaritalStatus
        /// </summary>
        [DataMember(Name = "maritalStatus", EmitDefaultValue = false)]
        public int MaritalStatus { get; set; }

        /// <summary>
        /// Gets or Sets CurrentAddress
        /// </summary>
        [DataMember(Name = "currentAddress", EmitDefaultValue = true)]
        public string CurrentAddress { get; set; }

        /// <summary>
        /// Gets or Sets DepartmentId
        /// </summary>
        [DataMember(Name = "departmentId", EmitDefaultValue = true)]
        public long? DepartmentId { get; set; }

        /// <summary>
        /// Gets or Sets FirstNameForeign
        /// </summary>
        [DataMember(Name = "firstNameForeign", EmitDefaultValue = true)]
        public string FirstNameForeign { get; set; }

        /// <summary>
        /// Gets or Sets LastNameForeign
        /// </summary>
        [DataMember(Name = "lastNameForeign", EmitDefaultValue = true)]
        public string LastNameForeign { get; set; }

        /// <summary>
        /// Gets or Sets IsSocialSecurityRegistered
        /// </summary>
        [DataMember(Name = "isSocialSecurityRegistered", EmitDefaultValue = true)]
        public bool IsSocialSecurityRegistered { get; set; }

        /// <summary>
        /// Gets or Sets BankBranchCode
        /// </summary>
        [DataMember(Name = "bankBranchCode", EmitDefaultValue = true)]
        public string BankBranchCode { get; set; }

        /// <summary>
        /// Gets or Sets IdCard
        /// </summary>
        [DataMember(Name = "idCard", EmitDefaultValue = true)]
        public long? IdCard { get; set; }

        /// <summary>
        /// Gets or Sets HouseholdRegistration
        /// </summary>
        [DataMember(Name = "householdRegistration", EmitDefaultValue = true)]
        public long? HouseholdRegistration { get; set; }

        /// <summary>
        /// Gets or Sets Nickname
        /// </summary>
        [DataMember(Name = "nickname", EmitDefaultValue = true)]
        public string Nickname { get; set; }

        /// <summary>
        /// Gets or Sets NicknameForeign
        /// </summary>
        [DataMember(Name = "nicknameForeign", EmitDefaultValue = true)]
        public string NicknameForeign { get; set; }

        /// <summary>
        /// Gets or Sets LineId
        /// </summary>
        [DataMember(Name = "lineId", EmitDefaultValue = true)]
        public string LineId { get; set; }

        /// <summary>
        /// Gets or Sets ConditionsWithholdingTax
        /// </summary>
        [DataMember(Name = "conditionsWithholdingTax", EmitDefaultValue = true)]
        public OneOfConditionsOfWithholdingTax ConditionsWithholdingTax { get; set; }

        /// <summary>
        /// Gets or Sets PaidPeriod
        /// </summary>
        [DataMember(Name = "paidPeriod", EmitDefaultValue = true)]
        public OneOfPaidPeriod PaidPeriod { get; set; }

        /// <summary>
        /// Gets or Sets Bank
        /// </summary>
        [DataMember(Name = "bank", EmitDefaultValue = true)]
        public OneOfBank Bank { get; set; }

        /// <summary>
        /// Gets or Sets Company
        /// </summary>
        [DataMember(Name = "company", EmitDefaultValue = true)]
        public OneOfCompany Company { get; set; }

        /// <summary>
        /// Gets or Sets Gallery
        /// </summary>
        [DataMember(Name = "gallery", EmitDefaultValue = true)]
        public OneOfGallery Gallery { get; set; }

        /// <summary>
        /// Gets or Sets GalleryIdCard
        /// </summary>
        [DataMember(Name = "galleryIdCard", EmitDefaultValue = true)]
        public OneOfGallery GalleryIdCard { get; set; }

        /// <summary>
        /// Gets or Sets GalleryHouseholdRegistration
        /// </summary>
        [DataMember(Name = "galleryHouseholdRegistration", EmitDefaultValue = true)]
        public OneOfGallery GalleryHouseholdRegistration { get; set; }

        /// <summary>
        /// Gets or Sets PayrollDetail
        /// </summary>
        [DataMember(Name = "payrollDetail", EmitDefaultValue = true)]
        public List<PayrollDetail> PayrollDetail { get; set; }

        /// <summary>
        /// Gets or Sets Department
        /// </summary>
        [DataMember(Name = "department", EmitDefaultValue = true)]
        public OneOfDepartment Department { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Employee {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CompanyId: ").Append(CompanyId).Append("\n");
            sb.Append("  Prefix: ").Append(Prefix).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  Salary: ").Append(Salary).Append("\n");
            sb.Append("  IdentitficationNumber: ").Append(IdentitficationNumber).Append("\n");
            sb.Append("  PassportNumber: ").Append(PassportNumber).Append("\n");
            sb.Append("  ProfileImage: ").Append(ProfileImage).Append("\n");
            sb.Append("  Mobile: ").Append(Mobile).Append("\n");
            sb.Append("  Commission: ").Append(Commission).Append("\n");
            sb.Append("  Remarks: ").Append(Remarks).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  GalleryId: ").Append(GalleryId).Append("\n");
            sb.Append("  BankId: ").Append(BankId).Append("\n");
            sb.Append("  Branch: ").Append(Branch).Append("\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  AccountType: ").Append(AccountType).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("  EndDate: ").Append(EndDate).Append("\n");
            sb.Append("  InternalNote: ").Append(InternalNote).Append("\n");
            sb.Append("  IsActive: ").Append(IsActive).Append("\n");
            sb.Append("  CreatedOn: ").Append(CreatedOn).Append("\n");
            sb.Append("  ModifiedOn: ").Append(ModifiedOn).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  ModifiedBy: ").Append(ModifiedBy).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  SalaryType: ").Append(SalaryType).Append("\n");
            sb.Append("  SocialSecurityNumber: ").Append(SocialSecurityNumber).Append("\n");
            sb.Append("  EmployerSocialSecurityRate: ").Append(EmployerSocialSecurityRate).Append("\n");
            sb.Append("  EmployeeSocialSecurityRate: ").Append(EmployeeSocialSecurityRate).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Dob: ").Append(Dob).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  ContactName: ").Append(ContactName).Append("\n");
            sb.Append("  ContactNumber: ").Append(ContactNumber).Append("\n");
            sb.Append("  ContactRelationship: ").Append(ContactRelationship).Append("\n");
            sb.Append("  Office: ").Append(Office).Append("\n");
            sb.Append("  SocialSecurityStatus: ").Append(SocialSecurityStatus).Append("\n");
            sb.Append("  MethodPayment: ").Append(MethodPayment).Append("\n");
            sb.Append("  SecondaryEmail: ").Append(SecondaryEmail).Append("\n");
            sb.Append("  IsDelete: ").Append(IsDelete).Append("\n");
            sb.Append("  SocialSecurityValue: ").Append(SocialSecurityValue).Append("\n");
            sb.Append("  WithholdingTax: ").Append(WithholdingTax).Append("\n");
            sb.Append("  IsHeadOffice: ").Append(IsHeadOffice).Append("\n");
            sb.Append("  CompanyBranch: ").Append(CompanyBranch).Append("\n");
            sb.Append("  MaritalStatus: ").Append(MaritalStatus).Append("\n");
            sb.Append("  CurrentAddress: ").Append(CurrentAddress).Append("\n");
            sb.Append("  DepartmentId: ").Append(DepartmentId).Append("\n");
            sb.Append("  FirstNameForeign: ").Append(FirstNameForeign).Append("\n");
            sb.Append("  LastNameForeign: ").Append(LastNameForeign).Append("\n");
            sb.Append("  IsSocialSecurityRegistered: ").Append(IsSocialSecurityRegistered).Append("\n");
            sb.Append("  BankBranchCode: ").Append(BankBranchCode).Append("\n");
            sb.Append("  IdCard: ").Append(IdCard).Append("\n");
            sb.Append("  HouseholdRegistration: ").Append(HouseholdRegistration).Append("\n");
            sb.Append("  Nickname: ").Append(Nickname).Append("\n");
            sb.Append("  NicknameForeign: ").Append(NicknameForeign).Append("\n");
            sb.Append("  LineId: ").Append(LineId).Append("\n");
            sb.Append("  ConditionsWithholdingTax: ").Append(ConditionsWithholdingTax).Append("\n");
            sb.Append("  PaidPeriod: ").Append(PaidPeriod).Append("\n");
            sb.Append("  Bank: ").Append(Bank).Append("\n");
            sb.Append("  Company: ").Append(Company).Append("\n");
            sb.Append("  Gallery: ").Append(Gallery).Append("\n");
            sb.Append("  GalleryIdCard: ").Append(GalleryIdCard).Append("\n");
            sb.Append("  GalleryHouseholdRegistration: ").Append(GalleryHouseholdRegistration).Append("\n");
            sb.Append("  PayrollDetail: ").Append(PayrollDetail).Append("\n");
            sb.Append("  Department: ").Append(Department).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Employee);
        }

        /// <summary>
        /// Returns true if Employee instances are equal
        /// </summary>
        /// <param name="input">Instance of Employee to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Employee input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    this.Id.Equals(input.Id)
                ) && 
                (
                    this.CompanyId == input.CompanyId ||
                    (this.CompanyId != null &&
                    this.CompanyId.Equals(input.CompanyId))
                ) && 
                (
                    this.Prefix == input.Prefix ||
                    this.Prefix.Equals(input.Prefix)
                ) && 
                (
                    this.FirstName == input.FirstName ||
                    (this.FirstName != null &&
                    this.FirstName.Equals(input.FirstName))
                ) && 
                (
                    this.LastName == input.LastName ||
                    (this.LastName != null &&
                    this.LastName.Equals(input.LastName))
                ) && 
                (
                    this.Salary == input.Salary ||
                    this.Salary.Equals(input.Salary)
                ) && 
                (
                    this.IdentitficationNumber == input.IdentitficationNumber ||
                    (this.IdentitficationNumber != null &&
                    this.IdentitficationNumber.Equals(input.IdentitficationNumber))
                ) && 
                (
                    this.PassportNumber == input.PassportNumber ||
                    (this.PassportNumber != null &&
                    this.PassportNumber.Equals(input.PassportNumber))
                ) && 
                (
                    this.ProfileImage == input.ProfileImage ||
                    (this.ProfileImage != null &&
                    this.ProfileImage.Equals(input.ProfileImage))
                ) && 
                (
                    this.Mobile == input.Mobile ||
                    (this.Mobile != null &&
                    this.Mobile.Equals(input.Mobile))
                ) && 
                (
                    this.Commission == input.Commission ||
                    (this.Commission != null &&
                    this.Commission.Equals(input.Commission))
                ) && 
                (
                    this.Remarks == input.Remarks ||
                    (this.Remarks != null &&
                    this.Remarks.Equals(input.Remarks))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.GalleryId == input.GalleryId ||
                    (this.GalleryId != null &&
                    this.GalleryId.Equals(input.GalleryId))
                ) && 
                (
                    this.BankId == input.BankId ||
                    (this.BankId != null &&
                    this.BankId.Equals(input.BankId))
                ) && 
                (
                    this.Branch == input.Branch ||
                    (this.Branch != null &&
                    this.Branch.Equals(input.Branch))
                ) && 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.AccountType == input.AccountType ||
                    (this.AccountType != null &&
                    this.AccountType.Equals(input.AccountType))
                ) && 
                (
                    this.StartDate == input.StartDate ||
                    (this.StartDate != null &&
                    this.StartDate.Equals(input.StartDate))
                ) && 
                (
                    this.EndDate == input.EndDate ||
                    (this.EndDate != null &&
                    this.EndDate.Equals(input.EndDate))
                ) && 
                (
                    this.InternalNote == input.InternalNote ||
                    (this.InternalNote != null &&
                    this.InternalNote.Equals(input.InternalNote))
                ) && 
                (
                    this.IsActive == input.IsActive ||
                    (this.IsActive != null &&
                    this.IsActive.Equals(input.IsActive))
                ) && 
                (
                    this.CreatedOn == input.CreatedOn ||
                    (this.CreatedOn != null &&
                    this.CreatedOn.Equals(input.CreatedOn))
                ) && 
                (
                    this.ModifiedOn == input.ModifiedOn ||
                    (this.ModifiedOn != null &&
                    this.ModifiedOn.Equals(input.ModifiedOn))
                ) && 
                (
                    this.CreatedBy == input.CreatedBy ||
                    (this.CreatedBy != null &&
                    this.CreatedBy.Equals(input.CreatedBy))
                ) && 
                (
                    this.ModifiedBy == input.ModifiedBy ||
                    (this.ModifiedBy != null &&
                    this.ModifiedBy.Equals(input.ModifiedBy))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.Code == input.Code ||
                    (this.Code != null &&
                    this.Code.Equals(input.Code))
                ) && 
                (
                    this.SalaryType == input.SalaryType ||
                    this.SalaryType.Equals(input.SalaryType)
                ) && 
                (
                    this.SocialSecurityNumber == input.SocialSecurityNumber ||
                    (this.SocialSecurityNumber != null &&
                    this.SocialSecurityNumber.Equals(input.SocialSecurityNumber))
                ) && 
                (
                    this.EmployerSocialSecurityRate == input.EmployerSocialSecurityRate ||
                    this.EmployerSocialSecurityRate.Equals(input.EmployerSocialSecurityRate)
                ) && 
                (
                    this.EmployeeSocialSecurityRate == input.EmployeeSocialSecurityRate ||
                    this.EmployeeSocialSecurityRate.Equals(input.EmployeeSocialSecurityRate)
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Dob == input.Dob ||
                    (this.Dob != null &&
                    this.Dob.Equals(input.Dob))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.ContactName == input.ContactName ||
                    (this.ContactName != null &&
                    this.ContactName.Equals(input.ContactName))
                ) && 
                (
                    this.ContactNumber == input.ContactNumber ||
                    (this.ContactNumber != null &&
                    this.ContactNumber.Equals(input.ContactNumber))
                ) && 
                (
                    this.ContactRelationship == input.ContactRelationship ||
                    (this.ContactRelationship != null &&
                    this.ContactRelationship.Equals(input.ContactRelationship))
                ) && 
                (
                    this.Office == input.Office ||
                    (this.Office != null &&
                    this.Office.Equals(input.Office))
                ) && 
                (
                    this.SocialSecurityStatus == input.SocialSecurityStatus ||
                    (this.SocialSecurityStatus != null &&
                    this.SocialSecurityStatus.Equals(input.SocialSecurityStatus))
                ) && 
                (
                    this.MethodPayment == input.MethodPayment ||
                    (this.MethodPayment != null &&
                    this.MethodPayment.Equals(input.MethodPayment))
                ) && 
                (
                    this.SecondaryEmail == input.SecondaryEmail ||
                    (this.SecondaryEmail != null &&
                    this.SecondaryEmail.Equals(input.SecondaryEmail))
                ) && 
                (
                    this.IsDelete == input.IsDelete ||
                    this.IsDelete.Equals(input.IsDelete)
                ) && 
                (
                    this.SocialSecurityValue == input.SocialSecurityValue ||
                    this.SocialSecurityValue.Equals(input.SocialSecurityValue)
                ) && 
                (
                    this.WithholdingTax == input.WithholdingTax ||
                    this.WithholdingTax.Equals(input.WithholdingTax)
                ) && 
                (
                    this.IsHeadOffice == input.IsHeadOffice ||
                    this.IsHeadOffice.Equals(input.IsHeadOffice)
                ) && 
                (
                    this.CompanyBranch == input.CompanyBranch ||
                    (this.CompanyBranch != null &&
                    this.CompanyBranch.Equals(input.CompanyBranch))
                ) && 
                (
                    this.MaritalStatus == input.MaritalStatus ||
                    this.MaritalStatus.Equals(input.MaritalStatus)
                ) && 
                (
                    this.CurrentAddress == input.CurrentAddress ||
                    (this.CurrentAddress != null &&
                    this.CurrentAddress.Equals(input.CurrentAddress))
                ) && 
                (
                    this.DepartmentId == input.DepartmentId ||
                    (this.DepartmentId != null &&
                    this.DepartmentId.Equals(input.DepartmentId))
                ) && 
                (
                    this.FirstNameForeign == input.FirstNameForeign ||
                    (this.FirstNameForeign != null &&
                    this.FirstNameForeign.Equals(input.FirstNameForeign))
                ) && 
                (
                    this.LastNameForeign == input.LastNameForeign ||
                    (this.LastNameForeign != null &&
                    this.LastNameForeign.Equals(input.LastNameForeign))
                ) && 
                (
                    this.IsSocialSecurityRegistered == input.IsSocialSecurityRegistered ||
                    this.IsSocialSecurityRegistered.Equals(input.IsSocialSecurityRegistered)
                ) && 
                (
                    this.BankBranchCode == input.BankBranchCode ||
                    (this.BankBranchCode != null &&
                    this.BankBranchCode.Equals(input.BankBranchCode))
                ) && 
                (
                    this.IdCard == input.IdCard ||
                    (this.IdCard != null &&
                    this.IdCard.Equals(input.IdCard))
                ) && 
                (
                    this.HouseholdRegistration == input.HouseholdRegistration ||
                    (this.HouseholdRegistration != null &&
                    this.HouseholdRegistration.Equals(input.HouseholdRegistration))
                ) && 
                (
                    this.Nickname == input.Nickname ||
                    (this.Nickname != null &&
                    this.Nickname.Equals(input.Nickname))
                ) && 
                (
                    this.NicknameForeign == input.NicknameForeign ||
                    (this.NicknameForeign != null &&
                    this.NicknameForeign.Equals(input.NicknameForeign))
                ) && 
                (
                    this.LineId == input.LineId ||
                    (this.LineId != null &&
                    this.LineId.Equals(input.LineId))
                ) && 
                (
                    this.ConditionsWithholdingTax == input.ConditionsWithholdingTax ||
                    (this.ConditionsWithholdingTax != null &&
                    this.ConditionsWithholdingTax.Equals(input.ConditionsWithholdingTax))
                ) && 
                (
                    this.PaidPeriod == input.PaidPeriod ||
                    (this.PaidPeriod != null &&
                    this.PaidPeriod.Equals(input.PaidPeriod))
                ) && 
                (
                    this.Bank == input.Bank ||
                    (this.Bank != null &&
                    this.Bank.Equals(input.Bank))
                ) && 
                (
                    this.Company == input.Company ||
                    (this.Company != null &&
                    this.Company.Equals(input.Company))
                ) && 
                (
                    this.Gallery == input.Gallery ||
                    (this.Gallery != null &&
                    this.Gallery.Equals(input.Gallery))
                ) && 
                (
                    this.GalleryIdCard == input.GalleryIdCard ||
                    (this.GalleryIdCard != null &&
                    this.GalleryIdCard.Equals(input.GalleryIdCard))
                ) && 
                (
                    this.GalleryHouseholdRegistration == input.GalleryHouseholdRegistration ||
                    (this.GalleryHouseholdRegistration != null &&
                    this.GalleryHouseholdRegistration.Equals(input.GalleryHouseholdRegistration))
                ) && 
                (
                    this.PayrollDetail == input.PayrollDetail ||
                    this.PayrollDetail != null &&
                    input.PayrollDetail != null &&
                    this.PayrollDetail.SequenceEqual(input.PayrollDetail)
                ) && 
                (
                    this.Department == input.Department ||
                    (this.Department != null &&
                    this.Department.Equals(input.Department))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Id.GetHashCode();
                if (this.CompanyId != null)
                {
                    hashCode = (hashCode * 59) + this.CompanyId.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Prefix.GetHashCode();
                if (this.FirstName != null)
                {
                    hashCode = (hashCode * 59) + this.FirstName.GetHashCode();
                }
                if (this.LastName != null)
                {
                    hashCode = (hashCode * 59) + this.LastName.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Salary.GetHashCode();
                if (this.IdentitficationNumber != null)
                {
                    hashCode = (hashCode * 59) + this.IdentitficationNumber.GetHashCode();
                }
                if (this.PassportNumber != null)
                {
                    hashCode = (hashCode * 59) + this.PassportNumber.GetHashCode();
                }
                if (this.ProfileImage != null)
                {
                    hashCode = (hashCode * 59) + this.ProfileImage.GetHashCode();
                }
                if (this.Mobile != null)
                {
                    hashCode = (hashCode * 59) + this.Mobile.GetHashCode();
                }
                if (this.Commission != null)
                {
                    hashCode = (hashCode * 59) + this.Commission.GetHashCode();
                }
                if (this.Remarks != null)
                {
                    hashCode = (hashCode * 59) + this.Remarks.GetHashCode();
                }
                if (this.Title != null)
                {
                    hashCode = (hashCode * 59) + this.Title.GetHashCode();
                }
                if (this.GalleryId != null)
                {
                    hashCode = (hashCode * 59) + this.GalleryId.GetHashCode();
                }
                if (this.BankId != null)
                {
                    hashCode = (hashCode * 59) + this.BankId.GetHashCode();
                }
                if (this.Branch != null)
                {
                    hashCode = (hashCode * 59) + this.Branch.GetHashCode();
                }
                if (this.AccountNumber != null)
                {
                    hashCode = (hashCode * 59) + this.AccountNumber.GetHashCode();
                }
                if (this.AccountType != null)
                {
                    hashCode = (hashCode * 59) + this.AccountType.GetHashCode();
                }
                if (this.StartDate != null)
                {
                    hashCode = (hashCode * 59) + this.StartDate.GetHashCode();
                }
                if (this.EndDate != null)
                {
                    hashCode = (hashCode * 59) + this.EndDate.GetHashCode();
                }
                if (this.InternalNote != null)
                {
                    hashCode = (hashCode * 59) + this.InternalNote.GetHashCode();
                }
                if (this.IsActive != null)
                {
                    hashCode = (hashCode * 59) + this.IsActive.GetHashCode();
                }
                if (this.CreatedOn != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedOn.GetHashCode();
                }
                if (this.ModifiedOn != null)
                {
                    hashCode = (hashCode * 59) + this.ModifiedOn.GetHashCode();
                }
                if (this.CreatedBy != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedBy.GetHashCode();
                }
                if (this.ModifiedBy != null)
                {
                    hashCode = (hashCode * 59) + this.ModifiedBy.GetHashCode();
                }
                if (this.Type != null)
                {
                    hashCode = (hashCode * 59) + this.Type.GetHashCode();
                }
                if (this.Code != null)
                {
                    hashCode = (hashCode * 59) + this.Code.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.SalaryType.GetHashCode();
                if (this.SocialSecurityNumber != null)
                {
                    hashCode = (hashCode * 59) + this.SocialSecurityNumber.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.EmployerSocialSecurityRate.GetHashCode();
                hashCode = (hashCode * 59) + this.EmployeeSocialSecurityRate.GetHashCode();
                if (this.Email != null)
                {
                    hashCode = (hashCode * 59) + this.Email.GetHashCode();
                }
                if (this.Dob != null)
                {
                    hashCode = (hashCode * 59) + this.Dob.GetHashCode();
                }
                if (this.Address != null)
                {
                    hashCode = (hashCode * 59) + this.Address.GetHashCode();
                }
                if (this.ContactName != null)
                {
                    hashCode = (hashCode * 59) + this.ContactName.GetHashCode();
                }
                if (this.ContactNumber != null)
                {
                    hashCode = (hashCode * 59) + this.ContactNumber.GetHashCode();
                }
                if (this.ContactRelationship != null)
                {
                    hashCode = (hashCode * 59) + this.ContactRelationship.GetHashCode();
                }
                if (this.Office != null)
                {
                    hashCode = (hashCode * 59) + this.Office.GetHashCode();
                }
                if (this.SocialSecurityStatus != null)
                {
                    hashCode = (hashCode * 59) + this.SocialSecurityStatus.GetHashCode();
                }
                if (this.MethodPayment != null)
                {
                    hashCode = (hashCode * 59) + this.MethodPayment.GetHashCode();
                }
                if (this.SecondaryEmail != null)
                {
                    hashCode = (hashCode * 59) + this.SecondaryEmail.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.IsDelete.GetHashCode();
                hashCode = (hashCode * 59) + this.SocialSecurityValue.GetHashCode();
                hashCode = (hashCode * 59) + this.WithholdingTax.GetHashCode();
                hashCode = (hashCode * 59) + this.IsHeadOffice.GetHashCode();
                if (this.CompanyBranch != null)
                {
                    hashCode = (hashCode * 59) + this.CompanyBranch.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.MaritalStatus.GetHashCode();
                if (this.CurrentAddress != null)
                {
                    hashCode = (hashCode * 59) + this.CurrentAddress.GetHashCode();
                }
                if (this.DepartmentId != null)
                {
                    hashCode = (hashCode * 59) + this.DepartmentId.GetHashCode();
                }
                if (this.FirstNameForeign != null)
                {
                    hashCode = (hashCode * 59) + this.FirstNameForeign.GetHashCode();
                }
                if (this.LastNameForeign != null)
                {
                    hashCode = (hashCode * 59) + this.LastNameForeign.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.IsSocialSecurityRegistered.GetHashCode();
                if (this.BankBranchCode != null)
                {
                    hashCode = (hashCode * 59) + this.BankBranchCode.GetHashCode();
                }
                if (this.IdCard != null)
                {
                    hashCode = (hashCode * 59) + this.IdCard.GetHashCode();
                }
                if (this.HouseholdRegistration != null)
                {
                    hashCode = (hashCode * 59) + this.HouseholdRegistration.GetHashCode();
                }
                if (this.Nickname != null)
                {
                    hashCode = (hashCode * 59) + this.Nickname.GetHashCode();
                }
                if (this.NicknameForeign != null)
                {
                    hashCode = (hashCode * 59) + this.NicknameForeign.GetHashCode();
                }
                if (this.LineId != null)
                {
                    hashCode = (hashCode * 59) + this.LineId.GetHashCode();
                }
                if (this.ConditionsWithholdingTax != null)
                {
                    hashCode = (hashCode * 59) + this.ConditionsWithholdingTax.GetHashCode();
                }
                if (this.PaidPeriod != null)
                {
                    hashCode = (hashCode * 59) + this.PaidPeriod.GetHashCode();
                }
                if (this.Bank != null)
                {
                    hashCode = (hashCode * 59) + this.Bank.GetHashCode();
                }
                if (this.Company != null)
                {
                    hashCode = (hashCode * 59) + this.Company.GetHashCode();
                }
                if (this.Gallery != null)
                {
                    hashCode = (hashCode * 59) + this.Gallery.GetHashCode();
                }
                if (this.GalleryIdCard != null)
                {
                    hashCode = (hashCode * 59) + this.GalleryIdCard.GetHashCode();
                }
                if (this.GalleryHouseholdRegistration != null)
                {
                    hashCode = (hashCode * 59) + this.GalleryHouseholdRegistration.GetHashCode();
                }
                if (this.PayrollDetail != null)
                {
                    hashCode = (hashCode * 59) + this.PayrollDetail.GetHashCode();
                }
                if (this.Department != null)
                {
                    hashCode = (hashCode * 59) + this.Department.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
