/*
 * FlowAccount Open API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// PayrollDetail
    /// </summary>
    [DataContract(Name = "PayrollDetail")]
    public partial class PayrollDetail : IEquatable<PayrollDetail>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public PayrollDetailStatus? Status { get; set; }

        /// <summary>
        /// Gets or Sets RuleCompileStatus
        /// </summary>
        [DataMember(Name = "ruleCompileStatus", EmitDefaultValue = false)]
        public RuleCompileStatus? RuleCompileStatus { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PayrollDetail" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="payrollId">payrollId.</param>
        /// <param name="employeeId">employeeId.</param>
        /// <param name="salary">salary.</param>
        /// <param name="socialSecurityValue">socialSecurityValue.</param>
        /// <param name="commission">commission.</param>
        /// <param name="bonus">bonus.</param>
        /// <param name="deduction">deduction.</param>
        /// <param name="withholdingTax">withholdingTax.</param>
        /// <param name="status">status.</param>
        /// <param name="isDelete">isDelete.</param>
        /// <param name="withheld">withheld.</param>
        /// <param name="datePayment">datePayment.</param>
        /// <param name="fee">fee.</param>
        /// <param name="_ref">_ref.</param>
        /// <param name="transactionId">transactionId.</param>
        /// <param name="amount">amount.</param>
        /// <param name="payStatus">payStatus.</param>
        /// <param name="remarks">remarks.</param>
        /// <param name="expenseId">expenseId.</param>
        /// <param name="overtime">overtime.</param>
        /// <param name="advance">advance.</param>
        /// <param name="otherAddition">otherAddition.</param>
        /// <param name="otherDeduction">otherDeduction.</param>
        /// <param name="providentFund">providentFund.</param>
        /// <param name="securityMoney">securityMoney.</param>
        /// <param name="value">value.</param>
        /// <param name="note">note.</param>
        /// <param name="createdOn">createdOn.</param>
        /// <param name="createdBy">createdBy.</param>
        /// <param name="modifiedOn">modifiedOn.</param>
        /// <param name="lastModifiedBy">lastModifiedBy.</param>
        /// <param name="employerSocialSecurity">employerSocialSecurity.</param>
        /// <param name="allowance">allowance.</param>
        /// <param name="cola">cola.</param>
        /// <param name="medicalExpense">medicalExpense.</param>
        /// <param name="accommodation">accommodation.</param>
        /// <param name="directorRemuneration">directorRemuneration.</param>
        /// <param name="methodPayment">methodPayment.</param>
        /// <param name="bankId">bankId.</param>
        /// <param name="accountNumber">accountNumber.</param>
        /// <param name="accountNumberMasking">accountNumberMasking.</param>
        /// <param name="employeeTitle">employeeTitle.</param>
        /// <param name="employeeCode">employeeCode.</param>
        /// <param name="employeeFirstName">employeeFirstName.</param>
        /// <param name="employeeLastName">employeeLastName.</param>
        /// <param name="employeeFirstNameForeign">employeeFirstNameForeign.</param>
        /// <param name="employeeLastNameForeign">employeeLastNameForeign.</param>
        /// <param name="employeeStartDate">employeeStartDate.</param>
        /// <param name="isSocialSecurityRegistered">isSocialSecurityRegistered.</param>
        /// <param name="bankBranchCode">bankBranchCode.</param>
        /// <param name="accountType">accountType.</param>
        /// <param name="referenceId">referenceId.</param>
        /// <param name="isMigrate">isMigrate.</param>
        /// <param name="employee">employee.</param>
        /// <param name="expenseList">expenseList.</param>
        /// <param name="payroll">payroll.</param>
        /// <param name="bank">bank.</param>
        /// <param name="lastModifiedByUser">lastModifiedByUser.</param>
        /// <param name="ruleCompileStatus">ruleCompileStatus.</param>
        /// <param name="employerAccountBranch">employerAccountBranch.</param>
        /// <param name="employerAccountNumber">employerAccountNumber.</param>
        /// <param name="bankAccountId">bankAccountId.</param>
        /// <param name="paymentRemarks">paymentRemarks.</param>
        /// <param name="payrollPaymentId">payrollPaymentId.</param>
        /// <param name="kcProcessingStatus">kcProcessingStatus.</param>
        /// <param name="departmentId">departmentId.</param>
        /// <param name="departmentName">departmentName.</param>
        /// <param name="departmentCode">departmentCode.</param>
        /// <param name="workDays">workDays.</param>
        /// <param name="wage">wage.</param>
        /// <param name="isSocialSecurityAutoCal">isSocialSecurityAutoCal.</param>
        /// <param name="socialSecurityPercent">socialSecurityPercent (default to 5M).</param>
        /// <param name="sendEmailStatus">sendEmailStatus.</param>
        /// <param name="studentLoan">studentLoan.</param>
        /// <param name="conditionsWithholdingTax">conditionsWithholdingTax.</param>
        /// <param name="overtimePND">overtimePND.</param>
        /// <param name="commissionPND">commissionPND.</param>
        /// <param name="bonusPND">bonusPND.</param>
        /// <param name="allowancePND">allowancePND.</param>
        /// <param name="colaPND">colaPND.</param>
        /// <param name="medicalExpensePND">medicalExpensePND.</param>
        /// <param name="accommodationPND">accommodationPND.</param>
        /// <param name="directorRemunerationPND">directorRemunerationPND.</param>
        /// <param name="otherAdditionPND">otherAdditionPND.</param>
        /// <param name="withholdingTax401">withholdingTax401.</param>
        /// <param name="withholdingTax402">withholdingTax402.</param>
        /// <param name="statusInt">statusInt.</param>
        public PayrollDetail(long id = default(long), long payrollId = default(long), long employeeId = default(long), decimal salary = default(decimal), decimal socialSecurityValue = default(decimal), decimal commission = default(decimal), decimal bonus = default(decimal), decimal deduction = default(decimal), decimal withholdingTax = default(decimal), PayrollDetailStatus? status = default(PayrollDetailStatus?), bool isDelete = default(bool), decimal withheld = default(decimal), DateTime? datePayment = default(DateTime?), decimal? fee = default(decimal?), string _ref = default(string), string transactionId = default(string), decimal? amount = default(decimal?), int? payStatus = default(int?), string remarks = default(string), long? expenseId = default(long?), decimal overtime = default(decimal), decimal advance = default(decimal), decimal otherAddition = default(decimal), decimal otherDeduction = default(decimal), decimal providentFund = default(decimal), decimal securityMoney = default(decimal), decimal value = default(decimal), string note = default(string), DateTime? createdOn = default(DateTime?), long? createdBy = default(long?), DateTime? modifiedOn = default(DateTime?), long lastModifiedBy = default(long), decimal employerSocialSecurity = default(decimal), decimal allowance = default(decimal), decimal cola = default(decimal), decimal medicalExpense = default(decimal), decimal accommodation = default(decimal), decimal directorRemuneration = default(decimal), int? methodPayment = default(int?), int? bankId = default(int?), string accountNumber = default(string), string accountNumberMasking = default(string), string employeeTitle = default(string), string employeeCode = default(string), string employeeFirstName = default(string), string employeeLastName = default(string), string employeeFirstNameForeign = default(string), string employeeLastNameForeign = default(string), DateTime? employeeStartDate = default(DateTime?), bool isSocialSecurityRegistered = default(bool), string bankBranchCode = default(string), OneOfBankAccountType accountType = default(OneOfBankAccountType), string referenceId = default(string), bool isMigrate = default(bool), OneOfEmployee employee = default(OneOfEmployee), OneOfExpenseList expenseList = default(OneOfExpenseList), OneOfPayroll payroll = default(OneOfPayroll), OneOfBank bank = default(OneOfBank), OneOfUser lastModifiedByUser = default(OneOfUser), RuleCompileStatus? ruleCompileStatus = default(RuleCompileStatus?), string employerAccountBranch = default(string), string employerAccountNumber = default(string), long? bankAccountId = default(long?), string paymentRemarks = default(string), long? payrollPaymentId = default(long?), int? kcProcessingStatus = default(int?), long? departmentId = default(long?), string departmentName = default(string), string departmentCode = default(string), decimal? workDays = default(decimal?), decimal? wage = default(decimal?), bool isSocialSecurityAutoCal = default(bool), decimal socialSecurityPercent = 5M, OneOfSendEmailStatus sendEmailStatus = default(OneOfSendEmailStatus), decimal studentLoan = default(decimal), OneOfConditionsOfWithholdingTax conditionsWithholdingTax = default(OneOfConditionsOfWithholdingTax), int? overtimePND = default(int?), int? commissionPND = default(int?), int? bonusPND = default(int?), int? allowancePND = default(int?), int? colaPND = default(int?), int? medicalExpensePND = default(int?), int? accommodationPND = default(int?), int? directorRemunerationPND = default(int?), int? otherAdditionPND = default(int?), decimal withholdingTax401 = default(decimal), decimal withholdingTax402 = default(decimal), int statusInt = default(int))
        {
            this.Id = id;
            this.PayrollId = payrollId;
            this.EmployeeId = employeeId;
            this.Salary = salary;
            this.SocialSecurityValue = socialSecurityValue;
            this.Commission = commission;
            this.Bonus = bonus;
            this.Deduction = deduction;
            this.WithholdingTax = withholdingTax;
            this.Status = status;
            this.IsDelete = isDelete;
            this.Withheld = withheld;
            this.DatePayment = datePayment;
            this.Fee = fee;
            this.Ref = _ref;
            this.TransactionId = transactionId;
            this.Amount = amount;
            this.PayStatus = payStatus;
            this.Remarks = remarks;
            this.ExpenseId = expenseId;
            this.Overtime = overtime;
            this.Advance = advance;
            this.OtherAddition = otherAddition;
            this.OtherDeduction = otherDeduction;
            this.ProvidentFund = providentFund;
            this.SecurityMoney = securityMoney;
            this.Value = value;
            this.Note = note;
            this.CreatedOn = createdOn;
            this.CreatedBy = createdBy;
            this.ModifiedOn = modifiedOn;
            this.LastModifiedBy = lastModifiedBy;
            this.EmployerSocialSecurity = employerSocialSecurity;
            this.Allowance = allowance;
            this.Cola = cola;
            this.MedicalExpense = medicalExpense;
            this.Accommodation = accommodation;
            this.DirectorRemuneration = directorRemuneration;
            this.MethodPayment = methodPayment;
            this.BankId = bankId;
            this.AccountNumber = accountNumber;
            this.AccountNumberMasking = accountNumberMasking;
            this.EmployeeTitle = employeeTitle;
            this.EmployeeCode = employeeCode;
            this.EmployeeFirstName = employeeFirstName;
            this.EmployeeLastName = employeeLastName;
            this.EmployeeFirstNameForeign = employeeFirstNameForeign;
            this.EmployeeLastNameForeign = employeeLastNameForeign;
            this.EmployeeStartDate = employeeStartDate;
            this.IsSocialSecurityRegistered = isSocialSecurityRegistered;
            this.BankBranchCode = bankBranchCode;
            this.AccountType = accountType;
            this.ReferenceId = referenceId;
            this.IsMigrate = isMigrate;
            this.Employee = employee;
            this.ExpenseList = expenseList;
            this.Payroll = payroll;
            this.Bank = bank;
            this.LastModifiedByUser = lastModifiedByUser;
            this.RuleCompileStatus = ruleCompileStatus;
            this.EmployerAccountBranch = employerAccountBranch;
            this.EmployerAccountNumber = employerAccountNumber;
            this.BankAccountId = bankAccountId;
            this.PaymentRemarks = paymentRemarks;
            this.PayrollPaymentId = payrollPaymentId;
            this.KcProcessingStatus = kcProcessingStatus;
            this.DepartmentId = departmentId;
            this.DepartmentName = departmentName;
            this.DepartmentCode = departmentCode;
            this.WorkDays = workDays;
            this.Wage = wage;
            this.IsSocialSecurityAutoCal = isSocialSecurityAutoCal;
            this.SocialSecurityPercent = socialSecurityPercent;
            this.SendEmailStatus = sendEmailStatus;
            this.StudentLoan = studentLoan;
            this.ConditionsWithholdingTax = conditionsWithholdingTax;
            this.OvertimePND = overtimePND;
            this.CommissionPND = commissionPND;
            this.BonusPND = bonusPND;
            this.AllowancePND = allowancePND;
            this.ColaPND = colaPND;
            this.MedicalExpensePND = medicalExpensePND;
            this.AccommodationPND = accommodationPND;
            this.DirectorRemunerationPND = directorRemunerationPND;
            this.OtherAdditionPND = otherAdditionPND;
            this.WithholdingTax401 = withholdingTax401;
            this.WithholdingTax402 = withholdingTax402;
            this.StatusInt = statusInt;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public long Id { get; set; }

        /// <summary>
        /// Gets or Sets PayrollId
        /// </summary>
        [DataMember(Name = "payrollId", EmitDefaultValue = false)]
        public long PayrollId { get; set; }

        /// <summary>
        /// Gets or Sets EmployeeId
        /// </summary>
        [DataMember(Name = "employeeId", EmitDefaultValue = false)]
        public long EmployeeId { get; set; }

        /// <summary>
        /// Gets or Sets Salary
        /// </summary>
        [DataMember(Name = "salary", EmitDefaultValue = false)]
        public decimal Salary { get; set; }

        /// <summary>
        /// Gets or Sets SocialSecurityValue
        /// </summary>
        [DataMember(Name = "socialSecurityValue", EmitDefaultValue = false)]
        public decimal SocialSecurityValue { get; set; }

        /// <summary>
        /// Gets or Sets Commission
        /// </summary>
        [DataMember(Name = "commission", EmitDefaultValue = false)]
        public decimal Commission { get; set; }

        /// <summary>
        /// Gets or Sets Bonus
        /// </summary>
        [DataMember(Name = "bonus", EmitDefaultValue = false)]
        public decimal Bonus { get; set; }

        /// <summary>
        /// Gets or Sets Deduction
        /// </summary>
        [DataMember(Name = "deduction", EmitDefaultValue = false)]
        public decimal Deduction { get; set; }

        /// <summary>
        /// Gets or Sets WithholdingTax
        /// </summary>
        [DataMember(Name = "withholdingTax", EmitDefaultValue = false)]
        public decimal WithholdingTax { get; set; }

        /// <summary>
        /// Gets or Sets IsDelete
        /// </summary>
        [DataMember(Name = "isDelete", EmitDefaultValue = true)]
        public bool IsDelete { get; set; }

        /// <summary>
        /// Gets or Sets Withheld
        /// </summary>
        [DataMember(Name = "withheld", EmitDefaultValue = false)]
        public decimal Withheld { get; set; }

        /// <summary>
        /// Gets or Sets DatePayment
        /// </summary>
        [DataMember(Name = "datePayment", EmitDefaultValue = true)]
        public DateTime? DatePayment { get; set; }

        /// <summary>
        /// Gets or Sets Fee
        /// </summary>
        [DataMember(Name = "fee", EmitDefaultValue = true)]
        public decimal? Fee { get; set; }

        /// <summary>
        /// Gets or Sets Ref
        /// </summary>
        [DataMember(Name = "ref", EmitDefaultValue = true)]
        public string Ref { get; set; }

        /// <summary>
        /// Gets or Sets TransactionId
        /// </summary>
        [DataMember(Name = "transactionId", EmitDefaultValue = true)]
        public string TransactionId { get; set; }

        /// <summary>
        /// Gets or Sets Amount
        /// </summary>
        [DataMember(Name = "amount", EmitDefaultValue = true)]
        public decimal? Amount { get; set; }

        /// <summary>
        /// Gets or Sets PayStatus
        /// </summary>
        [DataMember(Name = "payStatus", EmitDefaultValue = true)]
        public int? PayStatus { get; set; }

        /// <summary>
        /// Gets or Sets Remarks
        /// </summary>
        [DataMember(Name = "remarks", EmitDefaultValue = true)]
        public string Remarks { get; set; }

        /// <summary>
        /// Gets or Sets ExpenseId
        /// </summary>
        [DataMember(Name = "expenseId", EmitDefaultValue = true)]
        public long? ExpenseId { get; set; }

        /// <summary>
        /// Gets or Sets Overtime
        /// </summary>
        [DataMember(Name = "overtime", EmitDefaultValue = false)]
        public decimal Overtime { get; set; }

        /// <summary>
        /// Gets or Sets Advance
        /// </summary>
        [DataMember(Name = "advance", EmitDefaultValue = false)]
        public decimal Advance { get; set; }

        /// <summary>
        /// Gets or Sets OtherAddition
        /// </summary>
        [DataMember(Name = "otherAddition", EmitDefaultValue = false)]
        public decimal OtherAddition { get; set; }

        /// <summary>
        /// Gets or Sets OtherDeduction
        /// </summary>
        [DataMember(Name = "otherDeduction", EmitDefaultValue = false)]
        public decimal OtherDeduction { get; set; }

        /// <summary>
        /// Gets or Sets ProvidentFund
        /// </summary>
        [DataMember(Name = "providentFund", EmitDefaultValue = false)]
        public decimal ProvidentFund { get; set; }

        /// <summary>
        /// Gets or Sets SecurityMoney
        /// </summary>
        [DataMember(Name = "securityMoney", EmitDefaultValue = false)]
        public decimal SecurityMoney { get; set; }

        /// <summary>
        /// Gets or Sets Value
        /// </summary>
        [DataMember(Name = "value", EmitDefaultValue = false)]
        public decimal Value { get; set; }

        /// <summary>
        /// Gets or Sets Note
        /// </summary>
        [DataMember(Name = "note", EmitDefaultValue = true)]
        public string Note { get; set; }

        /// <summary>
        /// Gets or Sets CreatedOn
        /// </summary>
        [DataMember(Name = "createdOn", EmitDefaultValue = true)]
        public DateTime? CreatedOn { get; set; }

        /// <summary>
        /// Gets or Sets CreatedBy
        /// </summary>
        [DataMember(Name = "createdBy", EmitDefaultValue = true)]
        public long? CreatedBy { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedOn
        /// </summary>
        [DataMember(Name = "modifiedOn", EmitDefaultValue = true)]
        public DateTime? ModifiedOn { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedBy
        /// </summary>
        [DataMember(Name = "lastModifiedBy", EmitDefaultValue = false)]
        public long LastModifiedBy { get; set; }

        /// <summary>
        /// Gets or Sets EmployerSocialSecurity
        /// </summary>
        [DataMember(Name = "employerSocialSecurity", EmitDefaultValue = false)]
        public decimal EmployerSocialSecurity { get; set; }

        /// <summary>
        /// Gets or Sets Allowance
        /// </summary>
        [DataMember(Name = "allowance", EmitDefaultValue = false)]
        public decimal Allowance { get; set; }

        /// <summary>
        /// Gets or Sets Cola
        /// </summary>
        [DataMember(Name = "cola", EmitDefaultValue = false)]
        public decimal Cola { get; set; }

        /// <summary>
        /// Gets or Sets MedicalExpense
        /// </summary>
        [DataMember(Name = "medicalExpense", EmitDefaultValue = false)]
        public decimal MedicalExpense { get; set; }

        /// <summary>
        /// Gets or Sets Accommodation
        /// </summary>
        [DataMember(Name = "accommodation", EmitDefaultValue = false)]
        public decimal Accommodation { get; set; }

        /// <summary>
        /// Gets or Sets DirectorRemuneration
        /// </summary>
        [DataMember(Name = "directorRemuneration", EmitDefaultValue = false)]
        public decimal DirectorRemuneration { get; set; }

        /// <summary>
        /// Gets or Sets MethodPayment
        /// </summary>
        [DataMember(Name = "methodPayment", EmitDefaultValue = true)]
        public int? MethodPayment { get; set; }

        /// <summary>
        /// Gets or Sets BankId
        /// </summary>
        [DataMember(Name = "bankId", EmitDefaultValue = true)]
        public int? BankId { get; set; }

        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name = "accountNumber", EmitDefaultValue = true)]
        public string AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets AccountNumberMasking
        /// </summary>
        [DataMember(Name = "accountNumberMasking", EmitDefaultValue = true)]
        public string AccountNumberMasking { get; set; }

        /// <summary>
        /// Gets or Sets EmployeeTitle
        /// </summary>
        [DataMember(Name = "employeeTitle", EmitDefaultValue = true)]
        public string EmployeeTitle { get; set; }

        /// <summary>
        /// Gets or Sets EmployeeCode
        /// </summary>
        [DataMember(Name = "employeeCode", EmitDefaultValue = true)]
        public string EmployeeCode { get; set; }

        /// <summary>
        /// Gets or Sets EmployeeFirstName
        /// </summary>
        [DataMember(Name = "employeeFirstName", EmitDefaultValue = true)]
        public string EmployeeFirstName { get; set; }

        /// <summary>
        /// Gets or Sets EmployeeLastName
        /// </summary>
        [DataMember(Name = "employeeLastName", EmitDefaultValue = true)]
        public string EmployeeLastName { get; set; }

        /// <summary>
        /// Gets or Sets EmployeeFirstNameForeign
        /// </summary>
        [DataMember(Name = "employeeFirstNameForeign", EmitDefaultValue = true)]
        public string EmployeeFirstNameForeign { get; set; }

        /// <summary>
        /// Gets or Sets EmployeeLastNameForeign
        /// </summary>
        [DataMember(Name = "employeeLastNameForeign", EmitDefaultValue = true)]
        public string EmployeeLastNameForeign { get; set; }

        /// <summary>
        /// Gets or Sets EmployeeStartDate
        /// </summary>
        [DataMember(Name = "employeeStartDate", EmitDefaultValue = true)]
        public DateTime? EmployeeStartDate { get; set; }

        /// <summary>
        /// Gets or Sets IsSocialSecurityRegistered
        /// </summary>
        [DataMember(Name = "isSocialSecurityRegistered", EmitDefaultValue = true)]
        public bool IsSocialSecurityRegistered { get; set; }

        /// <summary>
        /// Gets or Sets BankBranchCode
        /// </summary>
        [DataMember(Name = "bankBranchCode", EmitDefaultValue = true)]
        public string BankBranchCode { get; set; }

        /// <summary>
        /// Gets or Sets AccountType
        /// </summary>
        [DataMember(Name = "accountType", EmitDefaultValue = true)]
        public OneOfBankAccountType AccountType { get; set; }

        /// <summary>
        /// Gets or Sets ReferenceId
        /// </summary>
        [DataMember(Name = "referenceId", EmitDefaultValue = true)]
        public string ReferenceId { get; set; }

        /// <summary>
        /// Gets or Sets IsMigrate
        /// </summary>
        [DataMember(Name = "isMigrate", EmitDefaultValue = true)]
        public bool IsMigrate { get; set; }

        /// <summary>
        /// Gets or Sets Employee
        /// </summary>
        [DataMember(Name = "employee", EmitDefaultValue = true)]
        public OneOfEmployee Employee { get; set; }

        /// <summary>
        /// Gets or Sets ExpenseList
        /// </summary>
        [DataMember(Name = "expenseList", EmitDefaultValue = true)]
        public OneOfExpenseList ExpenseList { get; set; }

        /// <summary>
        /// Gets or Sets Payroll
        /// </summary>
        [DataMember(Name = "payroll", EmitDefaultValue = true)]
        public OneOfPayroll Payroll { get; set; }

        /// <summary>
        /// Gets or Sets Bank
        /// </summary>
        [DataMember(Name = "bank", EmitDefaultValue = true)]
        public OneOfBank Bank { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedByUser
        /// </summary>
        [DataMember(Name = "lastModifiedByUser", EmitDefaultValue = true)]
        public OneOfUser LastModifiedByUser { get; set; }

        /// <summary>
        /// Gets or Sets EmployerAccountBranch
        /// </summary>
        [DataMember(Name = "employerAccountBranch", EmitDefaultValue = true)]
        public string EmployerAccountBranch { get; set; }

        /// <summary>
        /// Gets or Sets EmployerAccountNumber
        /// </summary>
        [DataMember(Name = "employerAccountNumber", EmitDefaultValue = true)]
        public string EmployerAccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets BankAccountId
        /// </summary>
        [DataMember(Name = "bankAccountId", EmitDefaultValue = true)]
        public long? BankAccountId { get; set; }

        /// <summary>
        /// Gets or Sets PaymentRemarks
        /// </summary>
        [DataMember(Name = "paymentRemarks", EmitDefaultValue = true)]
        public string PaymentRemarks { get; set; }

        /// <summary>
        /// Gets or Sets PayrollPaymentId
        /// </summary>
        [DataMember(Name = "payrollPaymentId", EmitDefaultValue = true)]
        public long? PayrollPaymentId { get; set; }

        /// <summary>
        /// Gets or Sets KcProcessingStatus
        /// </summary>
        [DataMember(Name = "kcProcessingStatus", EmitDefaultValue = true)]
        public int? KcProcessingStatus { get; set; }

        /// <summary>
        /// Gets or Sets DepartmentId
        /// </summary>
        [DataMember(Name = "departmentId", EmitDefaultValue = true)]
        public long? DepartmentId { get; set; }

        /// <summary>
        /// Gets or Sets DepartmentName
        /// </summary>
        [DataMember(Name = "departmentName", EmitDefaultValue = true)]
        public string DepartmentName { get; set; }

        /// <summary>
        /// Gets or Sets DepartmentCode
        /// </summary>
        [DataMember(Name = "departmentCode", EmitDefaultValue = true)]
        public string DepartmentCode { get; set; }

        /// <summary>
        /// Gets or Sets WorkDays
        /// </summary>
        [DataMember(Name = "workDays", EmitDefaultValue = true)]
        public decimal? WorkDays { get; set; }

        /// <summary>
        /// Gets or Sets Wage
        /// </summary>
        [DataMember(Name = "wage", EmitDefaultValue = true)]
        public decimal? Wage { get; set; }

        /// <summary>
        /// Gets or Sets IsSocialSecurityAutoCal
        /// </summary>
        [DataMember(Name = "isSocialSecurityAutoCal", EmitDefaultValue = true)]
        public bool IsSocialSecurityAutoCal { get; set; }

        /// <summary>
        /// Gets or Sets SocialSecurityPercent
        /// </summary>
        [DataMember(Name = "socialSecurityPercent", EmitDefaultValue = false)]
        public decimal SocialSecurityPercent { get; set; }

        /// <summary>
        /// Gets or Sets SendEmailStatus
        /// </summary>
        [DataMember(Name = "sendEmailStatus", EmitDefaultValue = true)]
        public OneOfSendEmailStatus SendEmailStatus { get; set; }

        /// <summary>
        /// Gets or Sets StudentLoan
        /// </summary>
        [DataMember(Name = "studentLoan", EmitDefaultValue = false)]
        public decimal StudentLoan { get; set; }

        /// <summary>
        /// Gets or Sets ConditionsWithholdingTax
        /// </summary>
        [DataMember(Name = "conditionsWithholdingTax", EmitDefaultValue = true)]
        public OneOfConditionsOfWithholdingTax ConditionsWithholdingTax { get; set; }

        /// <summary>
        /// Gets or Sets OvertimePND
        /// </summary>
        [DataMember(Name = "overtimePND", EmitDefaultValue = true)]
        public int? OvertimePND { get; set; }

        /// <summary>
        /// Gets or Sets CommissionPND
        /// </summary>
        [DataMember(Name = "commissionPND", EmitDefaultValue = true)]
        public int? CommissionPND { get; set; }

        /// <summary>
        /// Gets or Sets BonusPND
        /// </summary>
        [DataMember(Name = "bonusPND", EmitDefaultValue = true)]
        public int? BonusPND { get; set; }

        /// <summary>
        /// Gets or Sets AllowancePND
        /// </summary>
        [DataMember(Name = "allowancePND", EmitDefaultValue = true)]
        public int? AllowancePND { get; set; }

        /// <summary>
        /// Gets or Sets ColaPND
        /// </summary>
        [DataMember(Name = "colaPND", EmitDefaultValue = true)]
        public int? ColaPND { get; set; }

        /// <summary>
        /// Gets or Sets MedicalExpensePND
        /// </summary>
        [DataMember(Name = "medicalExpensePND", EmitDefaultValue = true)]
        public int? MedicalExpensePND { get; set; }

        /// <summary>
        /// Gets or Sets AccommodationPND
        /// </summary>
        [DataMember(Name = "accommodationPND", EmitDefaultValue = true)]
        public int? AccommodationPND { get; set; }

        /// <summary>
        /// Gets or Sets DirectorRemunerationPND
        /// </summary>
        [DataMember(Name = "directorRemunerationPND", EmitDefaultValue = true)]
        public int? DirectorRemunerationPND { get; set; }

        /// <summary>
        /// Gets or Sets OtherAdditionPND
        /// </summary>
        [DataMember(Name = "otherAdditionPND", EmitDefaultValue = true)]
        public int? OtherAdditionPND { get; set; }

        /// <summary>
        /// Gets or Sets WithholdingTax401
        /// </summary>
        [DataMember(Name = "withholdingTax401", EmitDefaultValue = false)]
        public decimal WithholdingTax401 { get; set; }

        /// <summary>
        /// Gets or Sets WithholdingTax402
        /// </summary>
        [DataMember(Name = "withholdingTax402", EmitDefaultValue = false)]
        public decimal WithholdingTax402 { get; set; }

        /// <summary>
        /// Gets or Sets StatusInt
        /// </summary>
        [DataMember(Name = "statusInt", EmitDefaultValue = false)]
        public int StatusInt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PayrollDetail {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  PayrollId: ").Append(PayrollId).Append("\n");
            sb.Append("  EmployeeId: ").Append(EmployeeId).Append("\n");
            sb.Append("  Salary: ").Append(Salary).Append("\n");
            sb.Append("  SocialSecurityValue: ").Append(SocialSecurityValue).Append("\n");
            sb.Append("  Commission: ").Append(Commission).Append("\n");
            sb.Append("  Bonus: ").Append(Bonus).Append("\n");
            sb.Append("  Deduction: ").Append(Deduction).Append("\n");
            sb.Append("  WithholdingTax: ").Append(WithholdingTax).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  IsDelete: ").Append(IsDelete).Append("\n");
            sb.Append("  Withheld: ").Append(Withheld).Append("\n");
            sb.Append("  DatePayment: ").Append(DatePayment).Append("\n");
            sb.Append("  Fee: ").Append(Fee).Append("\n");
            sb.Append("  Ref: ").Append(Ref).Append("\n");
            sb.Append("  TransactionId: ").Append(TransactionId).Append("\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  PayStatus: ").Append(PayStatus).Append("\n");
            sb.Append("  Remarks: ").Append(Remarks).Append("\n");
            sb.Append("  ExpenseId: ").Append(ExpenseId).Append("\n");
            sb.Append("  Overtime: ").Append(Overtime).Append("\n");
            sb.Append("  Advance: ").Append(Advance).Append("\n");
            sb.Append("  OtherAddition: ").Append(OtherAddition).Append("\n");
            sb.Append("  OtherDeduction: ").Append(OtherDeduction).Append("\n");
            sb.Append("  ProvidentFund: ").Append(ProvidentFund).Append("\n");
            sb.Append("  SecurityMoney: ").Append(SecurityMoney).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  Note: ").Append(Note).Append("\n");
            sb.Append("  CreatedOn: ").Append(CreatedOn).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  ModifiedOn: ").Append(ModifiedOn).Append("\n");
            sb.Append("  LastModifiedBy: ").Append(LastModifiedBy).Append("\n");
            sb.Append("  EmployerSocialSecurity: ").Append(EmployerSocialSecurity).Append("\n");
            sb.Append("  Allowance: ").Append(Allowance).Append("\n");
            sb.Append("  Cola: ").Append(Cola).Append("\n");
            sb.Append("  MedicalExpense: ").Append(MedicalExpense).Append("\n");
            sb.Append("  Accommodation: ").Append(Accommodation).Append("\n");
            sb.Append("  DirectorRemuneration: ").Append(DirectorRemuneration).Append("\n");
            sb.Append("  MethodPayment: ").Append(MethodPayment).Append("\n");
            sb.Append("  BankId: ").Append(BankId).Append("\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  AccountNumberMasking: ").Append(AccountNumberMasking).Append("\n");
            sb.Append("  EmployeeTitle: ").Append(EmployeeTitle).Append("\n");
            sb.Append("  EmployeeCode: ").Append(EmployeeCode).Append("\n");
            sb.Append("  EmployeeFirstName: ").Append(EmployeeFirstName).Append("\n");
            sb.Append("  EmployeeLastName: ").Append(EmployeeLastName).Append("\n");
            sb.Append("  EmployeeFirstNameForeign: ").Append(EmployeeFirstNameForeign).Append("\n");
            sb.Append("  EmployeeLastNameForeign: ").Append(EmployeeLastNameForeign).Append("\n");
            sb.Append("  EmployeeStartDate: ").Append(EmployeeStartDate).Append("\n");
            sb.Append("  IsSocialSecurityRegistered: ").Append(IsSocialSecurityRegistered).Append("\n");
            sb.Append("  BankBranchCode: ").Append(BankBranchCode).Append("\n");
            sb.Append("  AccountType: ").Append(AccountType).Append("\n");
            sb.Append("  ReferenceId: ").Append(ReferenceId).Append("\n");
            sb.Append("  IsMigrate: ").Append(IsMigrate).Append("\n");
            sb.Append("  Employee: ").Append(Employee).Append("\n");
            sb.Append("  ExpenseList: ").Append(ExpenseList).Append("\n");
            sb.Append("  Payroll: ").Append(Payroll).Append("\n");
            sb.Append("  Bank: ").Append(Bank).Append("\n");
            sb.Append("  LastModifiedByUser: ").Append(LastModifiedByUser).Append("\n");
            sb.Append("  RuleCompileStatus: ").Append(RuleCompileStatus).Append("\n");
            sb.Append("  EmployerAccountBranch: ").Append(EmployerAccountBranch).Append("\n");
            sb.Append("  EmployerAccountNumber: ").Append(EmployerAccountNumber).Append("\n");
            sb.Append("  BankAccountId: ").Append(BankAccountId).Append("\n");
            sb.Append("  PaymentRemarks: ").Append(PaymentRemarks).Append("\n");
            sb.Append("  PayrollPaymentId: ").Append(PayrollPaymentId).Append("\n");
            sb.Append("  KcProcessingStatus: ").Append(KcProcessingStatus).Append("\n");
            sb.Append("  DepartmentId: ").Append(DepartmentId).Append("\n");
            sb.Append("  DepartmentName: ").Append(DepartmentName).Append("\n");
            sb.Append("  DepartmentCode: ").Append(DepartmentCode).Append("\n");
            sb.Append("  WorkDays: ").Append(WorkDays).Append("\n");
            sb.Append("  Wage: ").Append(Wage).Append("\n");
            sb.Append("  IsSocialSecurityAutoCal: ").Append(IsSocialSecurityAutoCal).Append("\n");
            sb.Append("  SocialSecurityPercent: ").Append(SocialSecurityPercent).Append("\n");
            sb.Append("  SendEmailStatus: ").Append(SendEmailStatus).Append("\n");
            sb.Append("  StudentLoan: ").Append(StudentLoan).Append("\n");
            sb.Append("  ConditionsWithholdingTax: ").Append(ConditionsWithholdingTax).Append("\n");
            sb.Append("  OvertimePND: ").Append(OvertimePND).Append("\n");
            sb.Append("  CommissionPND: ").Append(CommissionPND).Append("\n");
            sb.Append("  BonusPND: ").Append(BonusPND).Append("\n");
            sb.Append("  AllowancePND: ").Append(AllowancePND).Append("\n");
            sb.Append("  ColaPND: ").Append(ColaPND).Append("\n");
            sb.Append("  MedicalExpensePND: ").Append(MedicalExpensePND).Append("\n");
            sb.Append("  AccommodationPND: ").Append(AccommodationPND).Append("\n");
            sb.Append("  DirectorRemunerationPND: ").Append(DirectorRemunerationPND).Append("\n");
            sb.Append("  OtherAdditionPND: ").Append(OtherAdditionPND).Append("\n");
            sb.Append("  WithholdingTax401: ").Append(WithholdingTax401).Append("\n");
            sb.Append("  WithholdingTax402: ").Append(WithholdingTax402).Append("\n");
            sb.Append("  StatusInt: ").Append(StatusInt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PayrollDetail);
        }

        /// <summary>
        /// Returns true if PayrollDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of PayrollDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PayrollDetail input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    this.Id.Equals(input.Id)
                ) && 
                (
                    this.PayrollId == input.PayrollId ||
                    this.PayrollId.Equals(input.PayrollId)
                ) && 
                (
                    this.EmployeeId == input.EmployeeId ||
                    this.EmployeeId.Equals(input.EmployeeId)
                ) && 
                (
                    this.Salary == input.Salary ||
                    this.Salary.Equals(input.Salary)
                ) && 
                (
                    this.SocialSecurityValue == input.SocialSecurityValue ||
                    this.SocialSecurityValue.Equals(input.SocialSecurityValue)
                ) && 
                (
                    this.Commission == input.Commission ||
                    this.Commission.Equals(input.Commission)
                ) && 
                (
                    this.Bonus == input.Bonus ||
                    this.Bonus.Equals(input.Bonus)
                ) && 
                (
                    this.Deduction == input.Deduction ||
                    this.Deduction.Equals(input.Deduction)
                ) && 
                (
                    this.WithholdingTax == input.WithholdingTax ||
                    this.WithholdingTax.Equals(input.WithholdingTax)
                ) && 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                ) && 
                (
                    this.IsDelete == input.IsDelete ||
                    this.IsDelete.Equals(input.IsDelete)
                ) && 
                (
                    this.Withheld == input.Withheld ||
                    this.Withheld.Equals(input.Withheld)
                ) && 
                (
                    this.DatePayment == input.DatePayment ||
                    (this.DatePayment != null &&
                    this.DatePayment.Equals(input.DatePayment))
                ) && 
                (
                    this.Fee == input.Fee ||
                    (this.Fee != null &&
                    this.Fee.Equals(input.Fee))
                ) && 
                (
                    this.Ref == input.Ref ||
                    (this.Ref != null &&
                    this.Ref.Equals(input.Ref))
                ) && 
                (
                    this.TransactionId == input.TransactionId ||
                    (this.TransactionId != null &&
                    this.TransactionId.Equals(input.TransactionId))
                ) && 
                (
                    this.Amount == input.Amount ||
                    (this.Amount != null &&
                    this.Amount.Equals(input.Amount))
                ) && 
                (
                    this.PayStatus == input.PayStatus ||
                    (this.PayStatus != null &&
                    this.PayStatus.Equals(input.PayStatus))
                ) && 
                (
                    this.Remarks == input.Remarks ||
                    (this.Remarks != null &&
                    this.Remarks.Equals(input.Remarks))
                ) && 
                (
                    this.ExpenseId == input.ExpenseId ||
                    (this.ExpenseId != null &&
                    this.ExpenseId.Equals(input.ExpenseId))
                ) && 
                (
                    this.Overtime == input.Overtime ||
                    this.Overtime.Equals(input.Overtime)
                ) && 
                (
                    this.Advance == input.Advance ||
                    this.Advance.Equals(input.Advance)
                ) && 
                (
                    this.OtherAddition == input.OtherAddition ||
                    this.OtherAddition.Equals(input.OtherAddition)
                ) && 
                (
                    this.OtherDeduction == input.OtherDeduction ||
                    this.OtherDeduction.Equals(input.OtherDeduction)
                ) && 
                (
                    this.ProvidentFund == input.ProvidentFund ||
                    this.ProvidentFund.Equals(input.ProvidentFund)
                ) && 
                (
                    this.SecurityMoney == input.SecurityMoney ||
                    this.SecurityMoney.Equals(input.SecurityMoney)
                ) && 
                (
                    this.Value == input.Value ||
                    this.Value.Equals(input.Value)
                ) && 
                (
                    this.Note == input.Note ||
                    (this.Note != null &&
                    this.Note.Equals(input.Note))
                ) && 
                (
                    this.CreatedOn == input.CreatedOn ||
                    (this.CreatedOn != null &&
                    this.CreatedOn.Equals(input.CreatedOn))
                ) && 
                (
                    this.CreatedBy == input.CreatedBy ||
                    (this.CreatedBy != null &&
                    this.CreatedBy.Equals(input.CreatedBy))
                ) && 
                (
                    this.ModifiedOn == input.ModifiedOn ||
                    (this.ModifiedOn != null &&
                    this.ModifiedOn.Equals(input.ModifiedOn))
                ) && 
                (
                    this.LastModifiedBy == input.LastModifiedBy ||
                    this.LastModifiedBy.Equals(input.LastModifiedBy)
                ) && 
                (
                    this.EmployerSocialSecurity == input.EmployerSocialSecurity ||
                    this.EmployerSocialSecurity.Equals(input.EmployerSocialSecurity)
                ) && 
                (
                    this.Allowance == input.Allowance ||
                    this.Allowance.Equals(input.Allowance)
                ) && 
                (
                    this.Cola == input.Cola ||
                    this.Cola.Equals(input.Cola)
                ) && 
                (
                    this.MedicalExpense == input.MedicalExpense ||
                    this.MedicalExpense.Equals(input.MedicalExpense)
                ) && 
                (
                    this.Accommodation == input.Accommodation ||
                    this.Accommodation.Equals(input.Accommodation)
                ) && 
                (
                    this.DirectorRemuneration == input.DirectorRemuneration ||
                    this.DirectorRemuneration.Equals(input.DirectorRemuneration)
                ) && 
                (
                    this.MethodPayment == input.MethodPayment ||
                    (this.MethodPayment != null &&
                    this.MethodPayment.Equals(input.MethodPayment))
                ) && 
                (
                    this.BankId == input.BankId ||
                    (this.BankId != null &&
                    this.BankId.Equals(input.BankId))
                ) && 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.AccountNumberMasking == input.AccountNumberMasking ||
                    (this.AccountNumberMasking != null &&
                    this.AccountNumberMasking.Equals(input.AccountNumberMasking))
                ) && 
                (
                    this.EmployeeTitle == input.EmployeeTitle ||
                    (this.EmployeeTitle != null &&
                    this.EmployeeTitle.Equals(input.EmployeeTitle))
                ) && 
                (
                    this.EmployeeCode == input.EmployeeCode ||
                    (this.EmployeeCode != null &&
                    this.EmployeeCode.Equals(input.EmployeeCode))
                ) && 
                (
                    this.EmployeeFirstName == input.EmployeeFirstName ||
                    (this.EmployeeFirstName != null &&
                    this.EmployeeFirstName.Equals(input.EmployeeFirstName))
                ) && 
                (
                    this.EmployeeLastName == input.EmployeeLastName ||
                    (this.EmployeeLastName != null &&
                    this.EmployeeLastName.Equals(input.EmployeeLastName))
                ) && 
                (
                    this.EmployeeFirstNameForeign == input.EmployeeFirstNameForeign ||
                    (this.EmployeeFirstNameForeign != null &&
                    this.EmployeeFirstNameForeign.Equals(input.EmployeeFirstNameForeign))
                ) && 
                (
                    this.EmployeeLastNameForeign == input.EmployeeLastNameForeign ||
                    (this.EmployeeLastNameForeign != null &&
                    this.EmployeeLastNameForeign.Equals(input.EmployeeLastNameForeign))
                ) && 
                (
                    this.EmployeeStartDate == input.EmployeeStartDate ||
                    (this.EmployeeStartDate != null &&
                    this.EmployeeStartDate.Equals(input.EmployeeStartDate))
                ) && 
                (
                    this.IsSocialSecurityRegistered == input.IsSocialSecurityRegistered ||
                    this.IsSocialSecurityRegistered.Equals(input.IsSocialSecurityRegistered)
                ) && 
                (
                    this.BankBranchCode == input.BankBranchCode ||
                    (this.BankBranchCode != null &&
                    this.BankBranchCode.Equals(input.BankBranchCode))
                ) && 
                (
                    this.AccountType == input.AccountType ||
                    (this.AccountType != null &&
                    this.AccountType.Equals(input.AccountType))
                ) && 
                (
                    this.ReferenceId == input.ReferenceId ||
                    (this.ReferenceId != null &&
                    this.ReferenceId.Equals(input.ReferenceId))
                ) && 
                (
                    this.IsMigrate == input.IsMigrate ||
                    this.IsMigrate.Equals(input.IsMigrate)
                ) && 
                (
                    this.Employee == input.Employee ||
                    (this.Employee != null &&
                    this.Employee.Equals(input.Employee))
                ) && 
                (
                    this.ExpenseList == input.ExpenseList ||
                    (this.ExpenseList != null &&
                    this.ExpenseList.Equals(input.ExpenseList))
                ) && 
                (
                    this.Payroll == input.Payroll ||
                    (this.Payroll != null &&
                    this.Payroll.Equals(input.Payroll))
                ) && 
                (
                    this.Bank == input.Bank ||
                    (this.Bank != null &&
                    this.Bank.Equals(input.Bank))
                ) && 
                (
                    this.LastModifiedByUser == input.LastModifiedByUser ||
                    (this.LastModifiedByUser != null &&
                    this.LastModifiedByUser.Equals(input.LastModifiedByUser))
                ) && 
                (
                    this.RuleCompileStatus == input.RuleCompileStatus ||
                    this.RuleCompileStatus.Equals(input.RuleCompileStatus)
                ) && 
                (
                    this.EmployerAccountBranch == input.EmployerAccountBranch ||
                    (this.EmployerAccountBranch != null &&
                    this.EmployerAccountBranch.Equals(input.EmployerAccountBranch))
                ) && 
                (
                    this.EmployerAccountNumber == input.EmployerAccountNumber ||
                    (this.EmployerAccountNumber != null &&
                    this.EmployerAccountNumber.Equals(input.EmployerAccountNumber))
                ) && 
                (
                    this.BankAccountId == input.BankAccountId ||
                    (this.BankAccountId != null &&
                    this.BankAccountId.Equals(input.BankAccountId))
                ) && 
                (
                    this.PaymentRemarks == input.PaymentRemarks ||
                    (this.PaymentRemarks != null &&
                    this.PaymentRemarks.Equals(input.PaymentRemarks))
                ) && 
                (
                    this.PayrollPaymentId == input.PayrollPaymentId ||
                    (this.PayrollPaymentId != null &&
                    this.PayrollPaymentId.Equals(input.PayrollPaymentId))
                ) && 
                (
                    this.KcProcessingStatus == input.KcProcessingStatus ||
                    (this.KcProcessingStatus != null &&
                    this.KcProcessingStatus.Equals(input.KcProcessingStatus))
                ) && 
                (
                    this.DepartmentId == input.DepartmentId ||
                    (this.DepartmentId != null &&
                    this.DepartmentId.Equals(input.DepartmentId))
                ) && 
                (
                    this.DepartmentName == input.DepartmentName ||
                    (this.DepartmentName != null &&
                    this.DepartmentName.Equals(input.DepartmentName))
                ) && 
                (
                    this.DepartmentCode == input.DepartmentCode ||
                    (this.DepartmentCode != null &&
                    this.DepartmentCode.Equals(input.DepartmentCode))
                ) && 
                (
                    this.WorkDays == input.WorkDays ||
                    (this.WorkDays != null &&
                    this.WorkDays.Equals(input.WorkDays))
                ) && 
                (
                    this.Wage == input.Wage ||
                    (this.Wage != null &&
                    this.Wage.Equals(input.Wage))
                ) && 
                (
                    this.IsSocialSecurityAutoCal == input.IsSocialSecurityAutoCal ||
                    this.IsSocialSecurityAutoCal.Equals(input.IsSocialSecurityAutoCal)
                ) && 
                (
                    this.SocialSecurityPercent == input.SocialSecurityPercent ||
                    this.SocialSecurityPercent.Equals(input.SocialSecurityPercent)
                ) && 
                (
                    this.SendEmailStatus == input.SendEmailStatus ||
                    (this.SendEmailStatus != null &&
                    this.SendEmailStatus.Equals(input.SendEmailStatus))
                ) && 
                (
                    this.StudentLoan == input.StudentLoan ||
                    this.StudentLoan.Equals(input.StudentLoan)
                ) && 
                (
                    this.ConditionsWithholdingTax == input.ConditionsWithholdingTax ||
                    (this.ConditionsWithholdingTax != null &&
                    this.ConditionsWithholdingTax.Equals(input.ConditionsWithholdingTax))
                ) && 
                (
                    this.OvertimePND == input.OvertimePND ||
                    (this.OvertimePND != null &&
                    this.OvertimePND.Equals(input.OvertimePND))
                ) && 
                (
                    this.CommissionPND == input.CommissionPND ||
                    (this.CommissionPND != null &&
                    this.CommissionPND.Equals(input.CommissionPND))
                ) && 
                (
                    this.BonusPND == input.BonusPND ||
                    (this.BonusPND != null &&
                    this.BonusPND.Equals(input.BonusPND))
                ) && 
                (
                    this.AllowancePND == input.AllowancePND ||
                    (this.AllowancePND != null &&
                    this.AllowancePND.Equals(input.AllowancePND))
                ) && 
                (
                    this.ColaPND == input.ColaPND ||
                    (this.ColaPND != null &&
                    this.ColaPND.Equals(input.ColaPND))
                ) && 
                (
                    this.MedicalExpensePND == input.MedicalExpensePND ||
                    (this.MedicalExpensePND != null &&
                    this.MedicalExpensePND.Equals(input.MedicalExpensePND))
                ) && 
                (
                    this.AccommodationPND == input.AccommodationPND ||
                    (this.AccommodationPND != null &&
                    this.AccommodationPND.Equals(input.AccommodationPND))
                ) && 
                (
                    this.DirectorRemunerationPND == input.DirectorRemunerationPND ||
                    (this.DirectorRemunerationPND != null &&
                    this.DirectorRemunerationPND.Equals(input.DirectorRemunerationPND))
                ) && 
                (
                    this.OtherAdditionPND == input.OtherAdditionPND ||
                    (this.OtherAdditionPND != null &&
                    this.OtherAdditionPND.Equals(input.OtherAdditionPND))
                ) && 
                (
                    this.WithholdingTax401 == input.WithholdingTax401 ||
                    this.WithholdingTax401.Equals(input.WithholdingTax401)
                ) && 
                (
                    this.WithholdingTax402 == input.WithholdingTax402 ||
                    this.WithholdingTax402.Equals(input.WithholdingTax402)
                ) && 
                (
                    this.StatusInt == input.StatusInt ||
                    this.StatusInt.Equals(input.StatusInt)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Id.GetHashCode();
                hashCode = (hashCode * 59) + this.PayrollId.GetHashCode();
                hashCode = (hashCode * 59) + this.EmployeeId.GetHashCode();
                hashCode = (hashCode * 59) + this.Salary.GetHashCode();
                hashCode = (hashCode * 59) + this.SocialSecurityValue.GetHashCode();
                hashCode = (hashCode * 59) + this.Commission.GetHashCode();
                hashCode = (hashCode * 59) + this.Bonus.GetHashCode();
                hashCode = (hashCode * 59) + this.Deduction.GetHashCode();
                hashCode = (hashCode * 59) + this.WithholdingTax.GetHashCode();
                hashCode = (hashCode * 59) + this.Status.GetHashCode();
                hashCode = (hashCode * 59) + this.IsDelete.GetHashCode();
                hashCode = (hashCode * 59) + this.Withheld.GetHashCode();
                if (this.DatePayment != null)
                {
                    hashCode = (hashCode * 59) + this.DatePayment.GetHashCode();
                }
                if (this.Fee != null)
                {
                    hashCode = (hashCode * 59) + this.Fee.GetHashCode();
                }
                if (this.Ref != null)
                {
                    hashCode = (hashCode * 59) + this.Ref.GetHashCode();
                }
                if (this.TransactionId != null)
                {
                    hashCode = (hashCode * 59) + this.TransactionId.GetHashCode();
                }
                if (this.Amount != null)
                {
                    hashCode = (hashCode * 59) + this.Amount.GetHashCode();
                }
                if (this.PayStatus != null)
                {
                    hashCode = (hashCode * 59) + this.PayStatus.GetHashCode();
                }
                if (this.Remarks != null)
                {
                    hashCode = (hashCode * 59) + this.Remarks.GetHashCode();
                }
                if (this.ExpenseId != null)
                {
                    hashCode = (hashCode * 59) + this.ExpenseId.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Overtime.GetHashCode();
                hashCode = (hashCode * 59) + this.Advance.GetHashCode();
                hashCode = (hashCode * 59) + this.OtherAddition.GetHashCode();
                hashCode = (hashCode * 59) + this.OtherDeduction.GetHashCode();
                hashCode = (hashCode * 59) + this.ProvidentFund.GetHashCode();
                hashCode = (hashCode * 59) + this.SecurityMoney.GetHashCode();
                hashCode = (hashCode * 59) + this.Value.GetHashCode();
                if (this.Note != null)
                {
                    hashCode = (hashCode * 59) + this.Note.GetHashCode();
                }
                if (this.CreatedOn != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedOn.GetHashCode();
                }
                if (this.CreatedBy != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedBy.GetHashCode();
                }
                if (this.ModifiedOn != null)
                {
                    hashCode = (hashCode * 59) + this.ModifiedOn.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.LastModifiedBy.GetHashCode();
                hashCode = (hashCode * 59) + this.EmployerSocialSecurity.GetHashCode();
                hashCode = (hashCode * 59) + this.Allowance.GetHashCode();
                hashCode = (hashCode * 59) + this.Cola.GetHashCode();
                hashCode = (hashCode * 59) + this.MedicalExpense.GetHashCode();
                hashCode = (hashCode * 59) + this.Accommodation.GetHashCode();
                hashCode = (hashCode * 59) + this.DirectorRemuneration.GetHashCode();
                if (this.MethodPayment != null)
                {
                    hashCode = (hashCode * 59) + this.MethodPayment.GetHashCode();
                }
                if (this.BankId != null)
                {
                    hashCode = (hashCode * 59) + this.BankId.GetHashCode();
                }
                if (this.AccountNumber != null)
                {
                    hashCode = (hashCode * 59) + this.AccountNumber.GetHashCode();
                }
                if (this.AccountNumberMasking != null)
                {
                    hashCode = (hashCode * 59) + this.AccountNumberMasking.GetHashCode();
                }
                if (this.EmployeeTitle != null)
                {
                    hashCode = (hashCode * 59) + this.EmployeeTitle.GetHashCode();
                }
                if (this.EmployeeCode != null)
                {
                    hashCode = (hashCode * 59) + this.EmployeeCode.GetHashCode();
                }
                if (this.EmployeeFirstName != null)
                {
                    hashCode = (hashCode * 59) + this.EmployeeFirstName.GetHashCode();
                }
                if (this.EmployeeLastName != null)
                {
                    hashCode = (hashCode * 59) + this.EmployeeLastName.GetHashCode();
                }
                if (this.EmployeeFirstNameForeign != null)
                {
                    hashCode = (hashCode * 59) + this.EmployeeFirstNameForeign.GetHashCode();
                }
                if (this.EmployeeLastNameForeign != null)
                {
                    hashCode = (hashCode * 59) + this.EmployeeLastNameForeign.GetHashCode();
                }
                if (this.EmployeeStartDate != null)
                {
                    hashCode = (hashCode * 59) + this.EmployeeStartDate.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.IsSocialSecurityRegistered.GetHashCode();
                if (this.BankBranchCode != null)
                {
                    hashCode = (hashCode * 59) + this.BankBranchCode.GetHashCode();
                }
                if (this.AccountType != null)
                {
                    hashCode = (hashCode * 59) + this.AccountType.GetHashCode();
                }
                if (this.ReferenceId != null)
                {
                    hashCode = (hashCode * 59) + this.ReferenceId.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.IsMigrate.GetHashCode();
                if (this.Employee != null)
                {
                    hashCode = (hashCode * 59) + this.Employee.GetHashCode();
                }
                if (this.ExpenseList != null)
                {
                    hashCode = (hashCode * 59) + this.ExpenseList.GetHashCode();
                }
                if (this.Payroll != null)
                {
                    hashCode = (hashCode * 59) + this.Payroll.GetHashCode();
                }
                if (this.Bank != null)
                {
                    hashCode = (hashCode * 59) + this.Bank.GetHashCode();
                }
                if (this.LastModifiedByUser != null)
                {
                    hashCode = (hashCode * 59) + this.LastModifiedByUser.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.RuleCompileStatus.GetHashCode();
                if (this.EmployerAccountBranch != null)
                {
                    hashCode = (hashCode * 59) + this.EmployerAccountBranch.GetHashCode();
                }
                if (this.EmployerAccountNumber != null)
                {
                    hashCode = (hashCode * 59) + this.EmployerAccountNumber.GetHashCode();
                }
                if (this.BankAccountId != null)
                {
                    hashCode = (hashCode * 59) + this.BankAccountId.GetHashCode();
                }
                if (this.PaymentRemarks != null)
                {
                    hashCode = (hashCode * 59) + this.PaymentRemarks.GetHashCode();
                }
                if (this.PayrollPaymentId != null)
                {
                    hashCode = (hashCode * 59) + this.PayrollPaymentId.GetHashCode();
                }
                if (this.KcProcessingStatus != null)
                {
                    hashCode = (hashCode * 59) + this.KcProcessingStatus.GetHashCode();
                }
                if (this.DepartmentId != null)
                {
                    hashCode = (hashCode * 59) + this.DepartmentId.GetHashCode();
                }
                if (this.DepartmentName != null)
                {
                    hashCode = (hashCode * 59) + this.DepartmentName.GetHashCode();
                }
                if (this.DepartmentCode != null)
                {
                    hashCode = (hashCode * 59) + this.DepartmentCode.GetHashCode();
                }
                if (this.WorkDays != null)
                {
                    hashCode = (hashCode * 59) + this.WorkDays.GetHashCode();
                }
                if (this.Wage != null)
                {
                    hashCode = (hashCode * 59) + this.Wage.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.IsSocialSecurityAutoCal.GetHashCode();
                hashCode = (hashCode * 59) + this.SocialSecurityPercent.GetHashCode();
                if (this.SendEmailStatus != null)
                {
                    hashCode = (hashCode * 59) + this.SendEmailStatus.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.StudentLoan.GetHashCode();
                if (this.ConditionsWithholdingTax != null)
                {
                    hashCode = (hashCode * 59) + this.ConditionsWithholdingTax.GetHashCode();
                }
                if (this.OvertimePND != null)
                {
                    hashCode = (hashCode * 59) + this.OvertimePND.GetHashCode();
                }
                if (this.CommissionPND != null)
                {
                    hashCode = (hashCode * 59) + this.CommissionPND.GetHashCode();
                }
                if (this.BonusPND != null)
                {
                    hashCode = (hashCode * 59) + this.BonusPND.GetHashCode();
                }
                if (this.AllowancePND != null)
                {
                    hashCode = (hashCode * 59) + this.AllowancePND.GetHashCode();
                }
                if (this.ColaPND != null)
                {
                    hashCode = (hashCode * 59) + this.ColaPND.GetHashCode();
                }
                if (this.MedicalExpensePND != null)
                {
                    hashCode = (hashCode * 59) + this.MedicalExpensePND.GetHashCode();
                }
                if (this.AccommodationPND != null)
                {
                    hashCode = (hashCode * 59) + this.AccommodationPND.GetHashCode();
                }
                if (this.DirectorRemunerationPND != null)
                {
                    hashCode = (hashCode * 59) + this.DirectorRemunerationPND.GetHashCode();
                }
                if (this.OtherAdditionPND != null)
                {
                    hashCode = (hashCode * 59) + this.OtherAdditionPND.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.WithholdingTax401.GetHashCode();
                hashCode = (hashCode * 59) + this.WithholdingTax402.GetHashCode();
                hashCode = (hashCode * 59) + this.StatusInt.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
