/*
 * FlowAccount Open API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing CreditNoteApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CreditNoteApiTests : IDisposable
    {
        private CreditNoteApi instance;

        public CreditNoteApiTests()
        {
            instance = new CreditNoteApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CreditNoteApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CreditNoteApi
            //Assert.IsType<CreditNoteApi>(instance);
        }

        /// <summary>
        /// Test CreditNoteActorCreate
        /// </summary>
        [Fact]
        public void CreditNoteActorCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string culture = null;
            //SimpleDocument simpleDocument = null;
            //var response = instance.CreditNoteActorCreate(culture, simpleDocument);
            //Assert.IsType<MessageSent>(response);
        }

        /// <summary>
        /// Test CreditNoteActorCreateInline
        /// </summary>
        [Fact]
        public void CreditNoteActorCreateInlineTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string culture = null;
            //InlineDocument inlineDocument = null;
            //var response = instance.CreditNoteActorCreateInline(culture, inlineDocument);
            //Assert.IsType<MessageSent>(response);
        }

        /// <summary>
        /// Test CreditNoteChangeStatusByKey
        /// </summary>
        [Fact]
        public void CreditNoteChangeStatusByKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long documentId = null;
            //string statusKey = null;
            //string culture = null;
            //var response = instance.CreditNoteChangeStatusByKey(documentId, statusKey, culture);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test CreditNoteDelete
        /// </summary>
        [Fact]
        public void CreditNoteDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //string culture = null;
            //var response = instance.CreditNoteDelete(id, culture);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test CreditNoteDetails
        /// </summary>
        [Fact]
        public void CreditNoteDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //string culture = null;
            //var response = instance.CreditNoteDetails(id, culture);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test CreditNoteEdit
        /// </summary>
        [Fact]
        public void CreditNoteEditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //string culture = null;
            //SimpleDocument simpleDocument = null;
            //var response = instance.CreditNoteEdit(id, culture, simpleDocument);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test CreditNoteEdit2
        /// </summary>
        [Fact]
        public void CreditNoteEdit2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //string culture = null;
            //InlineDocument inlineDocument = null;
            //var response = instance.CreditNoteEdit2(id, culture, inlineDocument);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test CreditNoteGetCumulativeDocumentReferenceList
        /// </summary>
        [Fact]
        public void CreditNoteGetCumulativeDocumentReferenceListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string culture = null;
            //string ids = null;
            //var response = instance.CreditNoteGetCumulativeDocumentReferenceList(culture, ids);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test CreditNoteIndex
        /// </summary>
        [Fact]
        public void CreditNoteIndexTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string culture = null;
            //string sortBy = null;
            //string currentPage = null;
            //string pageSize = null;
            //string filter = null;
            //string searchString = null;
            //string customDocumentModels = null;
            //string range = null;
            //string month = null;
            //string year = null;
            //string startDate = null;
            //string endDate = null;
            //var response = instance.CreditNoteIndex(culture, sortBy, currentPage, pageSize, filter, searchString, customDocumentModels, range, month, year, startDate, endDate);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test CreditNoteReceivePayment
        /// </summary>
        [Fact]
        public void CreditNoteReceivePaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //string culture = null;
            //PaymentModel paymentModel = null;
            //var response = instance.CreditNoteReceivePayment(id, culture, paymentModel);
            //Assert.IsType<System.IO.Stream>(response);
        }
    }
}
