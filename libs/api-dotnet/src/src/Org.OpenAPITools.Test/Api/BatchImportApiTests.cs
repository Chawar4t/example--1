/*
 * FlowAccount Open API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing BatchImportApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BatchImportApiTests : IDisposable
    {
        private BatchImportApi instance;

        public BatchImportApiTests()
        {
            instance = new BatchImportApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BatchImportApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BatchImportApi
            //Assert.IsType<BatchImportApi>(instance);
        }

        /// <summary>
        /// Test BatchImportDeleteCustomTemplate
        /// </summary>
        [Fact]
        public void BatchImportDeleteCustomTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string templateId = null;
            //string culture = null;
            //var response = instance.BatchImportDeleteCustomTemplate(templateId, culture);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test BatchImportGenerateBacthIdMetadata
        /// </summary>
        [Fact]
        public void BatchImportGenerateBacthIdMetadataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string culture = null;
            //string fileName = null;
            //var response = instance.BatchImportGenerateBacthIdMetadata(culture, fileName);
            //Assert.IsType<BatchImportMetadata>(response);
        }

        /// <summary>
        /// Test BatchImportGetBatchS3Data
        /// </summary>
        [Fact]
        public void BatchImportGetBatchS3DataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string batchId = null;
            //string culture = null;
            //var response = instance.BatchImportGetBatchS3Data(batchId, culture);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test BatchImportGetCustomTemplate
        /// </summary>
        [Fact]
        public void BatchImportGetCustomTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string templateId = null;
            //string culture = null;
            //var response = instance.BatchImportGetCustomTemplate(templateId, culture);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test BatchImportGetOrgingalFile
        /// </summary>
        [Fact]
        public void BatchImportGetOrgingalFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string batchId = null;
            //string culture = null;
            //var response = instance.BatchImportGetOrgingalFile(batchId, culture);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test BatchImportGetPresign
        /// </summary>
        [Fact]
        public void BatchImportGetPresignTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string culture = null;
            //BatchImportPayload batchImportPayload = null;
            //long? id = null;
            //var response = instance.BatchImportGetPresign(culture, batchImportPayload, id);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test BatchImportMarkViewed
        /// </summary>
        [Fact]
        public void BatchImportMarkViewedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string culture = null;
            //long body = null;
            //long? userId = null;
            //string batchId = null;
            //var response = instance.BatchImportMarkViewed(culture, body, userId, batchId);
            //Assert.IsType<bool>(response);
        }

        /// <summary>
        /// Test BatchImportQueryBatch
        /// </summary>
        [Fact]
        public void BatchImportQueryBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string culture = null;
            //string body = null;
            //BatchImportStatus? status = null;
            //var response = instance.BatchImportQueryBatch(culture, body, status);
            //Assert.IsType<BatchStatus>(response);
        }

        /// <summary>
        /// Test BatchImportQueryBatchHistory
        /// </summary>
        [Fact]
        public void BatchImportQueryBatchHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string culture = null;
            //var response = instance.BatchImportQueryBatchHistory(culture);
            //Assert.IsType<BatchHistory>(response);
        }

        /// <summary>
        /// Test BatchImportRetrySimpleDocuments
        /// </summary>
        [Fact]
        public void BatchImportRetrySimpleDocumentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string culture = null;
            //BatchImportRetry batchImportRetry = null;
            //var response = instance.BatchImportRetrySimpleDocuments(culture, batchImportRetry);
            //Assert.IsType<bool>(response);
        }

        /// <summary>
        /// Test BatchImportUpsertCustomTemplate
        /// </summary>
        [Fact]
        public void BatchImportUpsertCustomTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string culture = null;
            //CustomTemplate customTemplate = null;
            //var response = instance.BatchImportUpsertCustomTemplate(culture, customTemplate);
            //Assert.IsType<System.IO.Stream>(response);
        }
    }
}
